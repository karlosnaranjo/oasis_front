{"version":3,"file":"static/js/783.1ae3f6fc.chunk.js","mappings":"wPAYA,MAAMA,EAAmBC,EAAAA,GAAW,CAEpC,GAEMC,EAAUC,EAAAA,EAAUC,UAAUC,SAASC,KAIvCC,EAAY,CAChBC,KAAM,GACNC,MAAO,GACPC,KAAM,GACNC,SAAU,GACVC,YAAa,EACbC,MAAO,IA4IT,GAAeC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAzIDC,IASf,IATgB,GACrBC,EAAE,MACFC,EAAK,iBACLC,EAAgB,WAChBC,EAAU,OACVC,EAAM,MACNC,EAAK,QACLC,EAAO,QACPC,GACDR,EACC,MAAMS,GAAWC,EAAAA,EAAAA,OACVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAStB,GAG7BuB,GAAaC,EAAAA,EAAAA,cAAYC,UAC7B,MAAMC,EAAS,CACbC,IAAK/B,EAAAA,EAAUC,UAAUC,SAAS8B,kBAClCC,KAAMnB,EAAK,CAAEA,GAAIA,GAAO,CAAC,GAG3B,aADmBC,EAAMe,EACd,GACV,CAACf,EAAOD,EAAIO,IAITa,GAAON,EAAAA,EAAAA,cAAYC,UACvB,IACE,MAAM,KAACM,EAAI,MAACzB,SAAgBiB,KACtB,KACJtB,EAAI,MACJC,EACA8B,QAAS7B,GACP4B,EAEEE,EAAwB3B,EAXD4B,KAAKC,IAAG,CAAQC,MAAOD,EAAIzB,GAAI2B,MAAOF,EAAIlC,SAavEoB,EAAS,CACPX,GAAIA,GAAM,KACVT,KAAMA,GAAQ,GACdC,MAAOA,GAAS,GAChBC,KAAMA,GAAQ,GACdG,MAAO2B,GAEX,CAAE,MAAOK,GACP1B,EAAiB0B,EACnB,IACC,CAAC1B,EAAkBW,KAEtBgB,EAAAA,EAAAA,YAAU,KACRT,GAAM,GACL,CAACA,IAEJ,MAAMU,EAAgB9B,IACpBQ,EAAS,GAADuB,OAhEI,0BAgEO,UAAAA,OAAS/B,GAAM,CAAEgC,SAAS,GAAQ,GAsCjD,UAACC,EAAS,MAAErC,GAAUc,EAC5B,OAAOuB,GACLC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,KAEPD,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,oBAAkB,EAClBC,cAAe5B,EACf3B,iBAAkBA,EAClBwD,SA/BWxB,UACb,MAAMI,EAbWqB,KACjB,MAAM,KAAEjD,EAAI,MAAEC,EAAK,SAAEE,EAAQ,KAAED,EAAI,SAAEgD,GAAaD,EAClD,MAAO,CACLjD,KAAMA,EACNC,MAAOA,EACPE,SAAUA,EACVgD,iBAAkBhD,EAClB4B,QAAS7B,EACTgD,SAAUA,EACX,EAIYE,CAAUC,GACjB5B,EAAS,CACbC,IAAKjB,EAAE,GAAA+B,OAAM9C,EAAO,KAAA8C,OAAI/B,GAAOf,EAC/BkC,KAAMA,GAEF0B,EAAS7C,EAAKK,EAAQD,EAE5B,IACE,MAAM0C,QAAaD,EAAO7B,GACtBhB,GACFM,EAAQyC,EAAAA,EAASC,KAAKC,QACtBnB,EAAagB,EAAK9C,MAElBG,EAAW4C,EAAAA,EAASC,KAAKE,KACzBpB,EAAagB,EAAK9C,IAEtB,CAAE,MAAO4B,GACPuB,QAAQC,IAAI,oBAAoBxB,GAChC1B,EAAiB0B,EACnB,GAWmByB,SAEfC,IACAC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAH,SAAA,EACHnB,EAAAA,EAAAA,KAACuB,EAAAA,GAAW,CAACC,UAAWJ,KACxBpB,EAAAA,EAAAA,KAACyB,EAAAA,GAAI,CAACC,WAAS,EAACC,UAAU,MAAMC,QAAS,EAAET,UACzCE,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CAACC,WAAS,EAACG,MAAI,EAACD,QAAS,EAAET,SAAA,EAC9BnB,EAAAA,EAAAA,KAACyB,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEb,UAC7BnB,EAAAA,EAAAA,KAACiC,EAAAA,GAAK,CAACxC,MAAM,SAASpC,KAAK,OAAO6E,UAAWC,EAAAA,QAE/CnC,EAAAA,EAAAA,KAACyB,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEb,UAC7BnB,EAAAA,EAAAA,KAACiC,EAAAA,GAAK,CAACxC,MAAM,SAASpC,KAAK,QAAQ6E,UAAWC,EAAAA,QAEhDnC,EAAAA,EAAAA,KAACyB,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEb,UAC7BnB,EAAAA,EAAAA,KAACiC,EAAAA,GAAK,CAACxC,MAAM,gBAAapC,KAAK,WAAW6E,UAAWC,EAAAA,QAEvDnC,EAAAA,EAAAA,KAACyB,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEb,UAC7BnB,EAAAA,EAAAA,KAACiC,EAAAA,GAAK,CAACxC,MAAM,MAAMpC,KAAK,OAAO6E,UAAWE,EAAAA,GAAYC,MAAO3E,eAO1E,I,yGCnJH,MAAM,MAAE4E,EAAK,YAAEC,GAAgBC,EAAAA,QAAevF,UAAUwF,IAElDC,EAAc,CAAC,CAAEjD,MAAO,aAAe,CAAEA,MAAO6C,IAYtD,QAVA,WACE,OACEtC,EAAAA,EAAAA,KAAC2C,EAAAA,GAAW,CAACL,MAAOC,EAAaG,YAAaA,EAAYvB,UACxDnB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAa,KAGpB,C","sources":["pages/seguridad/usuario/Form.js","pages/seguridad/usuario/New.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid } from '@mui/material';\r\nimport { Form, Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { TextBase, Loader } from 'components';\r\nimport endPoints from 'endPoints/endPoints';\r\nimport messages from 'constantes/messages';\r\nimport { withApi, withNotification } from 'wrappers';\r\nimport { FormButtons, SelectBase } from 'components/controls';\r\nimport { useNavigate } from 'react-router';\r\n\r\nconst validationSchema = Yup.object({\r\n\r\n});\r\n\r\nconst urlBase = endPoints.seguridad.usuarios.base;\r\n\r\nconst baseUrl = '/app/seguridad/usuarios';\r\n\r\nconst initState = {\r\n  name: '',\r\n  email: '',\r\n  role: '',\r\n  password: '',\r\n  compania_id: 1,\r\n  roles: []\r\n};\r\n\r\nconst PresolpedForm = ({\r\n  id,\r\n  doGet,\r\n  genericException,\r\n  appSuccess,\r\n  doPost,\r\n  doPut,\r\n  appInfo,\r\n  refresh\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const [state, setState] = useState(initState);\r\n\r\n  // Call to API for load form values\r\n  const loadFields = useCallback(async () => {\r\n    const params = {\r\n      url: endPoints.seguridad.usuarios.initFormComponent,\r\n      data: id ? { id: id } : {}\r\n    };\r\n    const resp = await doGet(params);\r\n    return resp;\r\n  }, [doGet, id, refresh]);\r\n\r\n  const selectMap = (data) => data.map((row) => ({ value: row.id, label: row.name }));\r\n\r\n  const init = useCallback(async () => {\r\n    try {\r\n      const {user,roles}  = await loadFields();\r\n      const {\r\n        name,\r\n        email,\r\n        role_id: role\r\n      } = user;\r\n\r\n      const rolesSelect = selectMap(roles);\r\n\r\n      setState({\r\n        id: id || null,\r\n        name: name || '',\r\n        email: email || '',\r\n        role: role || '',\r\n        roles: rolesSelect\r\n      });\r\n    } catch (error) {\r\n      genericException(error);\r\n    }\r\n  }, [genericException, loadFields]);\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, [init]);\r\n\r\n  const redirectEdit = (id) => {\r\n    navigate(`${baseUrl}/edit/${id}`, { replace: false });\r\n  };\r\n\r\n  const mapValues = (values) => {\r\n    const { name, email, password, role, username } = values;\r\n    return {\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      confirm_password: password,\r\n      role_id: role,\r\n      username: username\r\n    };\r\n  };\r\n\r\n  const submit = async (valuesForm) => {\r\n    const data = mapValues(valuesForm);\r\n    const params = {\r\n      url: id ? `${urlBase}/${id}` : urlBase,\r\n      data: data\r\n    };\r\n    const method = id ? doPut : doPost;\r\n\r\n    try {\r\n      const resp = await method(params);\r\n      if (id) {\r\n        appInfo(messages.crud.update);\r\n        redirectEdit(resp.id);\r\n      } else {\r\n        appSuccess(messages.crud.new);\r\n        redirectEdit(resp.id);\r\n      }\r\n    } catch (error) {\r\n      console.log('ERROR AL GUARDAR '+error);\r\n      genericException(error);\r\n    }\r\n  };\r\n\r\n  const {isLoading, roles } = state;\r\n  return isLoading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Formik\r\n      enableReinitialize\r\n      initialValues={state}\r\n      validationSchema={validationSchema}\r\n      onSubmit={submit}\r\n    >\r\n      {(subProps) => (\r\n        <Form>\r\n          <FormButtons formProps={subProps} />\r\n          <Grid container direction=\"row\" spacing={2}>\r\n            <Grid container item spacing={2}>\r\n              <Grid item xs={6} md={6} xl={6}>\r\n                <Field label=\"Nombre\" name=\"name\" component={TextBase} />\r\n              </Grid>\r\n              <Grid item xs={6} md={6} xl={6}>\r\n                <Field label=\"Correo\" name=\"email\" component={TextBase} />\r\n              </Grid>\r\n              <Grid item xs={6} md={6} xl={6}>\r\n                <Field label=\"ContraseÃ±a\" name=\"password\" component={TextBase} />\r\n              </Grid>\r\n              <Grid item xs={6} md={6} xl={6}>\r\n                <Field label=\"Rol\" name=\"role\" component={SelectBase} items={roles} />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nPresolpedForm.propTypes = {\r\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  doPost: PropTypes.func,\r\n  doGet: PropTypes.func,\r\n  doPut: PropTypes.func,\r\n  appInfo: PropTypes.func.isRequired,\r\n  appSuccess: PropTypes.func.isRequired,\r\n  genericException: PropTypes.func.isRequired,\r\n  refresh: PropTypes.oneOfType([PropTypes.object])\r\n};\r\n\r\nexport default withApi(withNotification(PresolpedForm));\r\n","import React from 'react';\r\nimport { PageGeneral } from 'components';\r\nimport masterMessages from 'constantes/masterMessages';\r\nimport PresolpedForm from './Form';\r\n\r\nconst { title, createTitle } = masterMessages.seguridad.rol;\r\n\r\nconst breadcrumbs = [{ label: 'Seguridad' }, { label: title }];\r\n\r\nfunction New() {\r\n  return (\r\n    <PageGeneral title={createTitle} breadcrumbs={breadcrumbs}>\r\n      <PresolpedForm />\r\n    </PageGeneral>\r\n  );\r\n}\r\n\r\nNew.propTypes = {};\r\n\r\nexport default New;\r\n"],"names":["validationSchema","Yup","urlBase","endPoints","seguridad","usuarios","base","initState","name","email","role","password","compania_id","roles","withApi","withNotification","_ref","id","doGet","genericException","appSuccess","doPost","doPut","appInfo","refresh","navigate","useNavigate","state","setState","useState","loadFields","useCallback","async","params","url","initFormComponent","data","init","user","role_id","rolesSelect","map","row","value","label","error","useEffect","redirectEdit","concat","replace","isLoading","_jsx","Loader","Formik","enableReinitialize","initialValues","onSubmit","values","username","confirm_password","mapValues","valuesForm","method","resp","messages","crud","update","new","console","log","children","subProps","_jsxs","Form","FormButtons","formProps","Grid","container","direction","spacing","item","xs","md","xl","Field","component","TextBase","SelectBase","items","title","createTitle","masterMessages","rol","breadcrumbs","PageGeneral","PresolpedForm"],"sourceRoot":""}