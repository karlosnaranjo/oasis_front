{"version":3,"file":"static/js/616.4a33cb01.chunk.js","mappings":"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","sources":["pages/seguridad/usuario/RolePermission/PermissionList.js","pages/seguridad/usuario/Edit.js","pages/seguridad/usuario/RolePermission/index.js","pages/seguridad/usuario/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, DialogTitle, Dialog, DialogActions, DialogContent, Box } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { withApi, withNotification } from 'wrappers';\nimport { Table, Loader } from 'components';\nimport endPoints from 'endPoints/endPoints';\nimport messages from 'constantes/messages';\nimport masterMessages from 'constantes/masterMessages';\n\nconst initState = {\n  rows: [],\n  isLoading: true\n};\n\nconst PermissionList = ({\n  id,\n  doPost,\n  doGet,\n  genericException,\n  appSuccess,\n  setOpenModal,\n  refreshTable\n}) => {\n  const [state, setState] = useState(initState);\n  const [selectedRows, setSelectedRows] = useState([]);\n\n  useEffect(() => {\n    const init = async () => {\n      const params = {\n        url: `${endPoints.seguridad.rolesPermission.getPermission}/${id}`\n      };\n      try {\n        const permisos = await doGet(params);\n        setState({\n          rows: permisos,\n          isLoading: false\n        });\n      } catch (error) {\n        genericException(error);\n      }\n    };\n    init();\n  }, [genericException, id, doGet]);\n\n  // Save the rows selected in the modal\n  const onSelectedRows = (dataRows) => {\n    setSelectedRows(dataRows);\n  };\n\n  // Call to API for create new records selected in modal products\n  const createProducts = async () => {\n    const values = [];\n    selectedRows.forEach((row) => {\n      values.push(row.name);\n    });\n\n    const params = {\n      url: endPoints.seguridad.rolesPermission.base,\n      data: {\n        roleId: id,\n        permissions: values\n      }\n    };\n\n    try {\n      await doPost(params);\n      refreshTable();\n      setOpenModal();\n      appSuccess(messages.crud.new);\n    } catch (error) {\n      genericException(error);\n    }\n  };\n\n  const { isLoading, rows } = state;\n  const { title } = masterMessages.seguridad.rolPermission;\n\n  const columnsModalProducts = [\n    { name: 'name', label: 'Permiso' },\n    { name: 'description', label: 'Modulo' },\n  ];\n  return (\n    <Dialog open onClose={setOpenModal} fullWidth maxWidth=\"lg\">\n      {isLoading ? (\n        <Box p={10}>\n          <Loader />\n        </Box>\n      ) : (\n        <>\n          <DialogTitle>{title}</DialogTitle>\n          <DialogContent>\n            <Table data={rows} columns={columnsModalProducts} onRowsSelect={onSelectedRows} />\n          </DialogContent>\n          <DialogActions>\n            <Button disabled={!(selectedRows.length > 0)} variant=\"contained\" onClick={createProducts}>\n              Seleccionar\n            </Button>\n            <Button variant=\"contained\" onClick={setOpenModal}>\n              Cancelar\n            </Button>\n          </DialogActions>\n        </>\n      )}\n    </Dialog>\n  );\n};\n\nPermissionList.propTypes = {\n  id: PropTypes.string.isRequired,\n  refreshTable: PropTypes.func.isRequired,\n  setOpenModal: PropTypes.func.isRequired,\n  appSuccess: PropTypes.func.isRequired,\n  genericException: PropTypes.func.isRequired,\n  doPost: PropTypes.func,\n  doGet: PropTypes.func\n};\n\nexport default withApi(withNotification(PermissionList));\n","import React, { useState, useRef } from 'react';\nimport { withApi, withNotification } from 'wrappers';\nimport { PageGeneral } from 'components';\nimport masterMessages from 'constantes/masterMessages';\nimport { useParams } from 'react-router';\nimport TabsComponent from 'components/Tab';\nimport { Card, Grid } from '@mui/material';\nimport Form from './Form';\nimport TablePermission from './RolePermission';\n\nconst { title, updateTitle } = masterMessages.seguridad.rol;\n\nconst breadcrumbs = [{ label: 'Seguridad' }, { label: title }];\n\nconst MIN_HEIGHT = 250;\n\nfunction Edit() {\n  const { id } = useParams();\n\n  return (\n    <PageGeneral title={updateTitle} breadcrumbs={breadcrumbs} withOutCard>\n      <Grid container spacing={2} sx={{ pb: 2, minHeight: MIN_HEIGHT }}>\n        <Grid item xs={12} md={12}>\n          <Card sx={{ p: 3, minHeight: '100%' }}>\n              <Form id={id} />\n          </Card>\n        </Grid>\n      </Grid>\n    </PageGeneral>\n  );\n}\n\nexport default withApi(withNotification(Edit));\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { withApi, withNotification } from 'wrappers';\nimport { ConfirmModal } from 'components/dialogs';\nimport { DefaultActions, Table } from 'components';\nimport endPoints from 'endPoints/endPoints';\nimport messages from 'constantes/messages';\nimport masterMessages from 'constantes/masterMessages';\nimport PermissionList from './PermissionList';\n\n\nconst TablePermission = ({\n  id: id,\n  doDelete,\n  appWarning,\n  genericException\n}) => {\n  const [idToRemove, setIdToRemove] = useState(null);\n  const [idToUpdate, setIdToUpdate] = useState(null);\n  const [openModal, setOpenModal] = useState(false);\n\n  const child = useRef(null);\n\n  const openModalDelete = (id) => setIdToRemove(id);\n\n  const closeModalDelete = () => setIdToRemove(null);\n\n  const closeModalUpdate = () => {\n    setOpenModal(false);\n    setIdToUpdate(null);\n  };\n\n  const openModalUpdate = (id = null) => {\n    setOpenModal(true);\n    setIdToUpdate(id);\n  };\n\n  const refreshTableMateriales = () => child.current.refresh();\n\n  // Call to API for delete record selected in the table\n  const onDelete = async () => {\n    const params = {\n      url: `${endPoints.seguridad.rolesPermission.base}`,\n      data: { name: idToRemove}\n    };\n    try {\n      await doDelete(params);\n      refreshTableMateriales();\n      closeModalDelete();\n      appWarning(messages.crud.delete);\n    } catch (error) {\n      genericException(error);\n    }\n  };\n  const { deleteTitle, deleteMessage } = masterMessages.presolped.presolped;\n\n  const columns = [\n    { name: 'name', label: 'Permiso' },\n    { name: 'description', label: 'Modulo' },\n    {\n      name: 'acciones',\n      label: 'Acciones',\n      filter: false,\n      component: (row) => {\n        const { name } = row;\n        return (\n          <DefaultActions\n            onDelete={() => openModalDelete(name)}\n            row={row}\n          />\n        );\n      }\n    }\n  ];\n  return (\n    <>\n      {Boolean(idToRemove) && (\n        <ConfirmModal open title={deleteTitle} message={deleteMessage} onClose={closeModalDelete} onAccept={onDelete} />\n      )}\n      {Boolean(openModal) && (\n        <PermissionList\n          id={idToUpdate}\n          setOpenModal={closeModalUpdate}\n          refreshTable={refreshTableMateriales}\n        />\n      )}\n      <Table\n        forwardedRef={child}\n        serverSideUrl={`${endPoints.seguridad.rolesPermission.base}/${id}`}\n        serverSideData={{ id }}\n        onCreate={() => openModalUpdate(id)}\n        columns={columns}\n      />\n    </>\n  );\n};\n\nTablePermission.propTypes = {\n  id: PropTypes.string.isRequired,\n  appWarning: PropTypes.func.isRequired,\n  genericException: PropTypes.func.isRequired,\n  doDelete: PropTypes.func,\n  refreshPresolped: PropTypes.func\n};\n\nexport default withApi(withNotification(TablePermission));\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@mui/material';\nimport { Form, Field, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { TextBase, Loader } from 'components';\nimport endPoints from 'endPoints/endPoints';\nimport messages from 'constantes/messages';\nimport { withApi, withNotification } from 'wrappers';\nimport { FormButtons, SelectBase } from 'components/controls';\nimport { useNavigate } from 'react-router';\n\nconst validationSchema = Yup.object({\n\n});\n\nconst urlBase = endPoints.seguridad.usuarios.base;\n\nconst baseUrl = '/app/seguridad/usuarios';\n\nconst initState = {\n  name: '',\n  email: '',\n  role: '',\n  password: '',\n  compania_id: 1,\n  roles: []\n};\n\nconst PresolpedForm = ({\n  id,\n  doGet,\n  genericException,\n  appSuccess,\n  doPost,\n  doPut,\n  appInfo,\n  refresh\n}) => {\n  const navigate = useNavigate();\n  const [state, setState] = useState(initState);\n\n  // Call to API for load form values\n  const loadFields = useCallback(async () => {\n    const params = {\n      url: endPoints.seguridad.usuarios.initFormComponent,\n      data: id ? { id: id } : {}\n    };\n    const resp = await doGet(params);\n    return resp;\n  }, [doGet, id, refresh]);\n\n  const selectMap = (data) => data.map((row) => ({ value: row.id, label: row.name }));\n\n  const init = useCallback(async () => {\n    try {\n      const {user,roles}  = await loadFields();\n      const {\n        name,\n        email,\n        role_id: role\n      } = user;\n\n      const rolesSelect = selectMap(roles);\n\n      setState({\n        id: id || null,\n        name: name || '',\n        email: email || '',\n        role: role || '',\n        roles: rolesSelect\n      });\n    } catch (error) {\n      genericException(error);\n    }\n  }, [genericException, loadFields]);\n\n  useEffect(() => {\n    init();\n  }, [init]);\n\n  const redirectEdit = (id) => {\n    navigate(`${baseUrl}/edit/${id}`, { replace: false });\n  };\n\n  const mapValues = (values) => {\n    const { name, email, password, role, username } = values;\n    return {\n      name: name,\n      email: email,\n      password: password,\n      confirm_password: password,\n      role_id: role,\n      username: username\n    };\n  };\n\n  const submit = async (valuesForm) => {\n    const data = mapValues(valuesForm);\n    const params = {\n      url: id ? `${urlBase}/${id}` : urlBase,\n      data: data\n    };\n    const method = id ? doPut : doPost;\n\n    try {\n      const resp = await method(params);\n      if (id) {\n        appInfo(messages.crud.update);\n        redirectEdit(resp.id);\n      } else {\n        appSuccess(messages.crud.new);\n        redirectEdit(resp.id);\n      }\n    } catch (error) {\n      console.log('ERROR AL GUARDAR '+error);\n      genericException(error);\n    }\n  };\n\n  const {isLoading, roles } = state;\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <Formik\n      enableReinitialize\n      initialValues={state}\n      validationSchema={validationSchema}\n      onSubmit={submit}\n    >\n      {(subProps) => (\n        <Form>\n          <FormButtons formProps={subProps} />\n          <Grid container direction=\"row\" spacing={2}>\n            <Grid container item spacing={2}>\n              <Grid item xs={6} md={6} xl={6}>\n                <Field label=\"Nombre\" name=\"name\" component={TextBase} />\n              </Grid>\n              <Grid item xs={6} md={6} xl={6}>\n                <Field label=\"Correo\" name=\"email\" component={TextBase} />\n              </Grid>\n              <Grid item xs={6} md={6} xl={6}>\n                <Field label=\"Contraseña\" name=\"password\" component={TextBase} />\n              </Grid>\n              <Grid item xs={6} md={6} xl={6}>\n                <Field label=\"Rol\" name=\"role\" component={SelectBase} items={roles} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nPresolpedForm.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  doPost: PropTypes.func,\n  doGet: PropTypes.func,\n  doPut: PropTypes.func,\n  appInfo: PropTypes.func.isRequired,\n  appSuccess: PropTypes.func.isRequired,\n  genericException: PropTypes.func.isRequired,\n  refresh: PropTypes.oneOfType([PropTypes.object])\n};\n\nexport default withApi(withNotification(PresolpedForm));\n"],"names":["initState","rows","isLoading","withApi","withNotification","_ref","id","doPost","doGet","genericException","appSuccess","setOpenModal","refreshTable","state","setState","useState","selectedRows","setSelectedRows","useEffect","async","params","url","concat","endPoints","seguridad","rolesPermission","getPermission","permisos","error","init","title","masterMessages","rolPermission","_jsx","Dialog","open","onClose","fullWidth","maxWidth","children","Box","p","Loader","_jsxs","_Fragment","DialogTitle","DialogContent","Table","data","columns","name","label","onRowsSelect","dataRows","DialogActions","Button","disabled","length","variant","onClick","values","forEach","row","push","base","roleId","permissions","messages","crud","new","updateTitle","doDelete","appWarning","idToRemove","setIdToRemove","idToUpdate","setIdToUpdate","openModal","child","useRef","closeModalDelete","refreshTableMateriales","current","refresh","deleteTitle","deleteMessage","presolped","filter","component","DefaultActions","onDelete","openModalDelete","Boolean","ConfirmModal","message","onAccept","delete","PermissionList","closeModalUpdate","forwardedRef","serverSideUrl","serverSideData","onCreate","arguments","undefined","openModalUpdate","rol","breadcrumbs","useParams","PageGeneral","withOutCard","Grid","container","spacing","sx","pb","minHeight","item","xs","md","Card","Form","validationSchema","Yup","urlBase","usuarios","email","role","password","compania_id","roles","doPut","appInfo","navigate","useNavigate","loadFields","useCallback","initFormComponent","user","role_id","rolesSelect","map","value","redirectEdit","replace","Formik","enableReinitialize","initialValues","onSubmit","username","confirm_password","mapValues","valuesForm","method","resp","update","console","log","subProps","FormButtons","formProps","direction","xl","Field","TextBase","SelectBase","items"],"sourceRoot":""}