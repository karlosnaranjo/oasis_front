{"version":3,"file":"static/js/766.c31fe42f.chunk.js","mappings":"4VASA,MAAMA,EAAY,CAChBC,KAAM,GACNC,WAAW,GA0Gb,GAAeC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAvGAC,IAQhB,IARiB,GACtBC,EAAE,OACFC,EAAM,MACNC,EAAK,iBACLC,EAAgB,WAChBC,EAAU,aACVC,EAAY,aACZC,GACDP,EACC,MAAOQ,EAAOC,IAAYC,EAAAA,EAAAA,UAASf,IAC5BgB,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,KAEjDG,EAAAA,EAAAA,YAAU,KACKC,WACX,MAAMC,EAAS,CACbC,IAAI,GAADC,OAAKC,EAAAA,EAAUC,UAAUC,gBAAgBC,cAAa,KAAAJ,OAAIhB,IAE/D,IACE,MAAMqB,QAAiBnB,EAAMY,GAC7BN,EAAS,CACPb,KAAM0B,EACNzB,WAAW,GAEf,CAAE,MAAO0B,GACPnB,EAAiBmB,EACnB,GAEFC,EAAM,GACL,CAACpB,EAAkBH,EAAIE,IAG1B,MA6BM,UAAEN,EAAS,KAAED,GAASY,GACtB,MAAEiB,GAAUC,EAAAA,QAAeP,UAAUQ,cAM3C,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,MAAI,EAACC,QAASzB,EAAc0B,WAAS,EAACC,SAAS,KAAIC,SACxDrC,GACC+B,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACC,EAAG,GAAGF,UACTN,EAAAA,EAAAA,KAACS,EAAAA,GAAM,OAGTC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACEN,EAAAA,EAAAA,KAACY,EAAAA,EAAW,CAAAN,SAAET,KACdG,EAAAA,EAAAA,KAACa,EAAAA,EAAa,CAAAP,UACZN,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CAACC,KAAM/C,EAAMgD,QAdA,CAC3B,CAAEC,KAAM,OAAQC,MAAO,WACvB,CAAED,KAAM,cAAeC,MAAO,WAY4BC,aA9CpCC,IACtBpC,EAAgBoC,EAAS,OA+CnBV,EAAAA,EAAAA,MAACW,EAAAA,EAAa,CAAAf,SAAA,EACZN,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CAACC,WAAYxC,EAAayC,OAAS,GAAIC,QAAQ,YAAYC,QA5CrDxC,UACrB,MAAMyC,EAAS,GACf5C,EAAa6C,SAASC,IACpBF,EAAOG,KAAKD,EAAIZ,KAAK,IAGvB,MAAM9B,EAAS,CACbC,IAAKE,EAAAA,EAAUC,UAAUC,gBAAgBuC,KACzChB,KAAM,CACJiB,OAAQ3D,EACR4D,YAAaN,IAIjB,UACQrD,EAAOa,GACbR,IACAD,IACAD,EAAWyD,EAAAA,EAASC,KAAKC,IAC3B,CAAE,MAAOzC,GACPnB,EAAiBmB,EACnB,GAuBkGW,SAAC,iBAG3FN,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CAACG,QAAQ,YAAYC,QAAShD,EAAa4B,SAAC,oBAMlD,KCIb,GAAepC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAjGCC,IAKjB,IAJLC,GAAIA,EAAE,SACNgE,EAAQ,WACRC,EAAU,iBACV9D,GACDJ,EACC,MAAOmE,EAAYC,IAAiB1D,EAAAA,EAAAA,UAAS,OACtC2D,EAAYC,IAAiB5D,EAAAA,EAAAA,UAAS,OACtC6D,EAAWjE,IAAgBI,EAAAA,EAAAA,WAAS,GAErC8D,GAAQC,EAAAA,EAAAA,QAAO,MAIfC,EAAmBA,IAAMN,EAAc,MAYvCO,EAAuBA,IAAMH,EAAMI,QAAQC,WAiB3C,YAAEC,EAAW,cAAEC,GAAkBrD,EAAAA,QAAeP,UAAU6D,IAE1DpC,EAAU,CACd,CAAEC,KAAM,OAAQC,MAAO,WACvB,CAAED,KAAM,cAAeC,MAAO,UAC9B,CACED,KAAM,WACNC,MAAO,WACPmC,QAAQ,EACRC,UAAYzB,IACV,MAAM,KAAEZ,GAASY,EACjB,OACE7B,EAAAA,EAAAA,KAACuD,EAAAA,GAAc,CAACC,SAAUA,IA3CTnF,IAAOmE,EAAcnE,GA2CNoF,CAAgBxC,GAAOY,IAAKA,GAAO,IAK3E,OACEnB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,CACGoD,QAAQnB,KACPvC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAY,CACXzD,MAAI,EACJL,MAAOqD,EACPU,QAAST,EACThD,QAAS2C,EACTe,SAvCS3E,UACf,MAAMC,EAAS,CACbC,IAAI,GAADC,OAAKC,EAAAA,EAAUC,UAAUC,gBAAgBuC,MAC5ChB,KAAM,CAAEE,KAAMsB,IAEhB,UACQF,EAASlD,GACf4D,IACAD,IACAR,EAAWJ,EAAAA,EAASC,KAAK2B,OAC3B,CAAE,MAAOnE,GACPnB,EAAiBmB,EACnB,KA8BG+D,QAAQf,KACP3C,EAAAA,EAAAA,KAAC+D,EAAc,CACb1F,GAAIoE,EACJ/D,aA1DiBsF,KACvBtF,GAAa,GACbgE,EAAc,KAAK,EAyDb/D,aAAcoE,KAGlB/C,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CACJmD,aAAcrB,EACdsB,cAAa,GAAA7E,OAAKC,EAAAA,EAAUC,UAAUC,gBAAgBuC,KAAI,KAAA1C,OAAIhB,GAC9D8F,eAAgB,CAAE9F,MAClB+F,SAAUA,IA7DQ,WAAgB,IAAf/F,EAAEgG,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAC5B3F,GAAa,GACbgE,EAAcrE,EAChB,CA0DsBkG,CAAgBlG,GAChC2C,QAASA,MAEV,MCrFD,MAAEnB,EAAK,YAAE2E,GAAgB1E,EAAAA,QAAeP,UAAU6D,IAElDqB,EAAc,CAAC,CAAEvD,MAAO,aAAe,CAAEA,MAAOrB,IA6BtD,SAAe3B,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAzBvB,WACE,MAAM,GAAEE,IAAOqG,EAAAA,EAAAA,MAETC,EAAY,CAChB,CACEzD,MAAO,WACPoC,WAAWtD,EAAAA,EAAAA,KAAC4E,EAAe,CAACvG,GAAIA,MAGpC,OACEqC,EAAAA,EAAAA,MAACmE,EAAAA,GAAW,CAAChF,MAAO2E,EAAaC,YAAaA,EAAaK,aAAW,EAAAxE,SAAA,EACpEN,EAAAA,EAAAA,KAAC+E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,GAAI,CAAEC,GAAI,EAAGC,UAb5B,KAaoD9E,UAC/DN,EAAAA,EAAAA,KAAC+E,EAAAA,GAAI,CAACM,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAGjF,UACxBN,EAAAA,EAAAA,KAACwF,EAAAA,EAAI,CAACN,GAAI,CAAE1E,EAAG,EAAG4E,UAAW,QAAS9E,UAClCN,EAAAA,EAAAA,KAACyF,EAAAA,EAAI,CAACpH,GAAIA,WAIlB2B,EAAAA,EAAAA,KAACwF,EAAAA,EAAI,CAACN,GAAI,CAAEQ,GAAI,EAAGC,GAAI,GAAIrF,UACzBN,EAAAA,EAAAA,KAAC4F,EAAAA,EAAa,CAACC,OAAQlB,QAI/B,I,gKCrBA,MAAMmB,EAAmBC,EAAAA,GAAW,CAClC,GAUIC,EAAU1G,EAAAA,EAAUC,UAAU0G,MAAMlE,KAI1C,MAEMhE,EAAY,CAChBmI,OAAQ,GACRC,YAAa,GAoHf,GAAejI,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAjHPC,IAST,IATU,GACfC,EAAE,MACFE,EAAK,iBACLC,EAAgB,WAChBC,EAAU,OACVH,EAAM,MACN8H,EAAK,QACLC,EAAO,QACPpD,GACD7E,EACC,MAAMkI,GAAWC,EAAAA,EAAAA,OACV3H,EAAOC,IAAYC,EAAAA,EAAAA,UAASf,GAG7ByI,GAAaC,EAAAA,EAAAA,cAAYvH,UAC7B,MAAMC,EAAS,CACbC,IAAKE,EAAAA,EAAUC,UAAU0G,MAAMS,kBAC/B3F,KAAM1C,EAAK,CAAEA,GAAIA,GAAO,CAAC,GAG3B,aADmBE,EAAMY,EACd,GACV,CAACZ,EAAOF,EAAI4E,IAETrD,GAAO6G,EAAAA,EAAAA,cAAYvH,UACvB,IACE,MAAMK,QAAkBiH,KAChBvF,KAAMiF,GAAW3G,EAEzBV,EAAS,CACPR,GAAIA,GAAM,KACV6H,OAAQA,GAAU,IAEtB,CAAE,MAAOvG,GACPnB,EAAiBmB,EACnB,IACC,CAACnB,EAAkBgI,KAEtBvH,EAAAA,EAAAA,YAAU,KACRW,GAAM,GACL,CAACA,IAEJ,MAAM+G,EAAgBtI,IACpBiI,EAAS,GAADjH,OAjDI,uBAiDO,UAAAA,OAAShB,GAAM,CAAEuI,SAAS,GAAQ,GAiCjD,UAAE3I,GAAcW,EACtB,OAAOX,GACL+B,EAAAA,EAAAA,KAACS,EAAAA,GAAM,KAEPT,EAAAA,EAAAA,KAAC6G,EAAAA,GAAM,CACLC,oBAAkB,EAClBC,cAAenI,EACfkH,iBAAkBA,EAClBkB,SA/BW9H,UACb,MAAM6B,EARWY,KACjB,MAAM,OAAEuE,GAAWvE,EACnB,MAAO,CACLV,KAAMiF,EACP,EAIYe,CAAUC,GACjB/H,EAAS,CACbC,IAAKf,EAAE,GAAAgB,OAAM2G,EAAO,KAAA3G,OAAIhB,GAAO2H,EAC/BjF,KAAMA,GAEFoG,EAAS9I,EAAK+H,EAAQ9H,EAE5B,IACE,MAAM8I,QAAaD,EAAOhI,GACtBd,GACFgI,EAAQnE,EAAAA,EAASC,KAAKkF,QACtBV,EAAaS,EAAK/I,MAElBI,EAAWyD,EAAAA,EAASC,KAAKC,KACzBuE,EAAaS,EAAK/I,IAEtB,CAAE,MAAOsB,GACP2H,QAAQC,IAAI,oBAAsB5H,GAClCnB,EAAiBmB,EACnB,GAWmBW,SAEfkH,IACA9G,EAAAA,EAAAA,MAAC+E,EAAAA,GAAI,CAAAnF,SAAA,EACHN,EAAAA,EAAAA,KAACyH,EAAAA,GAAW,CAACC,UAAWF,KACxBxH,EAAAA,EAAAA,KAAC+E,EAAAA,GAAI,CAACC,WAAS,EAAC2C,UAAU,MAAM1C,QAAS,EAAE3E,UACzCN,EAAAA,EAAAA,KAAC+E,EAAAA,GAAI,CAACC,WAAS,EAACK,MAAI,EAACJ,QAAS,EAAE3E,UAC9BN,EAAAA,EAAAA,KAAC+E,EAAAA,GAAI,CAACM,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGqC,GAAI,EAAEtH,UAC7BN,EAAAA,EAAAA,KAAC6H,EAAAA,GAAK,CAAC3G,MAAM,SAASD,KAAK,SAASqC,UAAWwE,EAAAA,eAO5D,I","sources":["pages/seguridad/roles/RolePermission/PermissionList.js","pages/seguridad/roles/RolePermission/index.js","pages/seguridad/roles/Edit.js","pages/seguridad/roles/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, DialogTitle, Dialog, DialogActions, DialogContent, Box } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { withApi, withNotification } from 'wrappers';\nimport { Table, Loader } from 'components';\nimport endPoints from 'endPoints/endPoints';\nimport messages from 'constantes/messages';\nimport masterMessages from 'constantes/masterMessages';\n\nconst initState = {\n  rows: [],\n  isLoading: true\n};\n\nconst PermissionList = ({\n  id,\n  doPost,\n  doGet,\n  genericException,\n  appSuccess,\n  setOpenModal,\n  refreshTable\n}) => {\n  const [state, setState] = useState(initState);\n  const [selectedRows, setSelectedRows] = useState([]);\n\n  useEffect(() => {\n    const init = async () => {\n      const params = {\n        url: `${endPoints.seguridad.rolesPermission.getPermission}/${id}`\n      };\n      try {\n        const permisos = await doGet(params);\n        setState({\n          rows: permisos,\n          isLoading: false\n        });\n      } catch (error) {\n        genericException(error);\n      }\n    };\n    init();\n  }, [genericException, id, doGet]);\n\n  // Save the rows selected in the modal\n  const onSelectedRows = (dataRows) => {\n    setSelectedRows(dataRows);\n  };\n\n  // Call to API for create new records selected in modal products\n  const createProducts = async () => {\n    const values = [];\n    selectedRows.forEach((row) => {\n      values.push(row.name);\n    });\n\n    const params = {\n      url: endPoints.seguridad.rolesPermission.base,\n      data: {\n        roleId: id,\n        permissions: values\n      }\n    };\n\n    try {\n      await doPost(params);\n      refreshTable();\n      setOpenModal();\n      appSuccess(messages.crud.new);\n    } catch (error) {\n      genericException(error);\n    }\n  };\n\n  const { isLoading, rows } = state;\n  const { title } = masterMessages.seguridad.rolPermission;\n\n  const columnsModalProducts = [\n    { name: 'name', label: 'Permiso' },\n    { name: 'description', label: 'Modulo' },\n  ];\n  return (\n    <Dialog open onClose={setOpenModal} fullWidth maxWidth=\"lg\">\n      {isLoading ? (\n        <Box p={10}>\n          <Loader />\n        </Box>\n      ) : (\n        <>\n          <DialogTitle>{title}</DialogTitle>\n          <DialogContent>\n            <Table data={rows} columns={columnsModalProducts} onRowsSelect={onSelectedRows} />\n          </DialogContent>\n          <DialogActions>\n            <Button disabled={!(selectedRows.length > 0)} variant=\"contained\" onClick={createProducts}>\n              Seleccionar\n            </Button>\n            <Button variant=\"contained\" onClick={setOpenModal}>\n              Cancelar\n            </Button>\n          </DialogActions>\n        </>\n      )}\n    </Dialog>\n  );\n};\n\nPermissionList.propTypes = {\n  id: PropTypes.string.isRequired,\n  refreshTable: PropTypes.func.isRequired,\n  setOpenModal: PropTypes.func.isRequired,\n  appSuccess: PropTypes.func.isRequired,\n  genericException: PropTypes.func.isRequired,\n  doPost: PropTypes.func,\n  doGet: PropTypes.func\n};\n\nexport default withApi(withNotification(PermissionList));\n","import React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withApi, withNotification } from \"wrappers\";\nimport { ConfirmModal } from \"components/dialogs\";\nimport { DefaultActions, Table } from \"components\";\nimport endPoints from \"endPoints/endPoints\";\nimport messages from \"constantes/messages\";\nimport masterMessages from \"constantes/masterMessages\";\nimport PermissionList from \"./PermissionList\";\n\nconst TablePermission = ({\n  id: id,\n  doDelete,\n  appWarning,\n  genericException,\n}) => {\n  const [idToRemove, setIdToRemove] = useState(null);\n  const [idToUpdate, setIdToUpdate] = useState(null);\n  const [openModal, setOpenModal] = useState(false);\n\n  const child = useRef(null);\n\n  const openModalDelete = (id) => setIdToRemove(id);\n\n  const closeModalDelete = () => setIdToRemove(null);\n\n  const closeModalUpdate = () => {\n    setOpenModal(false);\n    setIdToUpdate(null);\n  };\n\n  const openModalUpdate = (id = null) => {\n    setOpenModal(true);\n    setIdToUpdate(id);\n  };\n\n  const refreshRolPermission = () => child.current.refresh();\n\n  // Call to API for delete record selected in the table\n  const onDelete = async () => {\n    const params = {\n      url: `${endPoints.seguridad.rolesPermission.base}`,\n      data: { name: idToRemove },\n    };\n    try {\n      await doDelete(params);\n      refreshRolPermission();\n      closeModalDelete();\n      appWarning(messages.crud.delete);\n    } catch (error) {\n      genericException(error);\n    }\n  };\n  const { deleteTitle, deleteMessage } = masterMessages.seguridad.rol;\n\n  const columns = [\n    { name: \"name\", label: \"Permiso\" },\n    { name: \"description\", label: \"Modulo\" },\n    {\n      name: \"acciones\",\n      label: \"Acciones\",\n      filter: false,\n      component: (row) => {\n        const { name } = row;\n        return (\n          <DefaultActions onDelete={() => openModalDelete(name)} row={row} />\n        );\n      },\n    },\n  ];\n  return (\n    <>\n      {Boolean(idToRemove) && (\n        <ConfirmModal\n          open\n          title={deleteTitle}\n          message={deleteMessage}\n          onClose={closeModalDelete}\n          onAccept={onDelete}\n        />\n      )}\n      {Boolean(openModal) && (\n        <PermissionList\n          id={idToUpdate}\n          setOpenModal={closeModalUpdate}\n          refreshTable={refreshRolPermission}\n        />\n      )}\n      <Table\n        forwardedRef={child}\n        serverSideUrl={`${endPoints.seguridad.rolesPermission.base}/${id}`}\n        serverSideData={{ id }}\n        onCreate={() => openModalUpdate(id)}\n        columns={columns}\n      />\n    </>\n  );\n};\n\nTablePermission.propTypes = {\n  id: PropTypes.string.isRequired,\n  appWarning: PropTypes.func.isRequired,\n  genericException: PropTypes.func.isRequired,\n  doDelete: PropTypes.func,\n  refreshPresolped: PropTypes.func,\n};\n\nexport default withApi(withNotification(TablePermission));\n","import React, { useState, useRef } from 'react';\nimport { withApi, withNotification } from 'wrappers';\nimport { PageGeneral } from 'components';\nimport masterMessages from 'constantes/masterMessages';\nimport { useParams } from 'react-router';\nimport TabsComponent from 'components/Tab';\nimport { Card, Grid } from '@mui/material';\nimport Form from './Form';\nimport TablePermission from './RolePermission';\n\nconst { title, updateTitle } = masterMessages.seguridad.rol;\n\nconst breadcrumbs = [{ label: 'Seguridad' }, { label: title }];\n\nconst MIN_HEIGHT = 250;\n\nfunction Edit() {\n  const { id } = useParams();\n\n  const tabConfig = [\n    {\n      label: 'Permisos',\n      component: <TablePermission id={id}  />\n    }\n  ];\n  return (\n    <PageGeneral title={updateTitle} breadcrumbs={breadcrumbs} withOutCard>\n      <Grid container spacing={2} sx={{ pb: 2, minHeight: MIN_HEIGHT }}>\n        <Grid item xs={12} md={12}>\n          <Card sx={{ p: 3, minHeight: '100%' }}>\n              <Form id={id} />\n          </Card>\n        </Grid>\n      </Grid>\n      <Card sx={{ pl: 2, pr: 2 }}>\n        <TabsComponent config={tabConfig} />\n      </Card>\n    </PageGeneral>\n  );\n}\n\nexport default withApi(withNotification(Edit));\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"@mui/material\";\nimport { Form, Field, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  SelectBase,\n  TextBase,\n  TextAreaBase,\n  AutoCompleteBase,\n  Loader,\n} from \"components\";\nimport endPoints from \"endPoints/endPoints\";\nimport messages from \"constantes/messages\";\nimport { withApi, withNotification } from \"wrappers\";\nimport { FormButtons } from \"components/controls\";\nimport { useNavigate } from \"react-router\";\n\nconst validationSchema = Yup.object({\n  /* documentoCompra: Yup.number().required('El campo es requerido'),\n  documentoProveedor: Yup.string().required('El campo es requerido'),\n  proveedor: Yup.number().required('El campo es requerido'),\n  // moneda: Yup.number().required('El campo es requerido'),\n  fechaCompra: Yup.date().required('El campo fecha es requerida'),\n  bodega: Yup.number().when('requiereBodega', (requiereBodega, schema) =>\n    requiereBodega ? schema.required('El campo incoterm es requerido') : schema\n  ) */\n});\n\nconst urlBase = endPoints.seguridad.roles.base;\n\nlet empleadosList = [{ label: \"General\", value: \"1\" }];\n\nconst baseUrl = \"/app/seguridad/roles\";\n\nconst initState = {\n  nombre: \"\",\n  compania_id: 1,\n};\n\nconst RolForm = ({\n  id,\n  doGet,\n  genericException,\n  appSuccess,\n  doPost,\n  doPut,\n  appInfo,\n  refresh,\n}) => {\n  const navigate = useNavigate();\n  const [state, setState] = useState(initState);\n\n  // Call to API for load form values\n  const loadFields = useCallback(async () => {\n    const params = {\n      url: endPoints.seguridad.roles.initFormComponent,\n      data: id ? { id: id } : {},\n    };\n    const resp = await doGet(params);\n    return resp;\n  }, [doGet, id, refresh]);\n\n  const init = useCallback(async () => {\n    try {\n      const seguridad = await loadFields();\n      const { name: nombre } = seguridad;\n\n      setState({\n        id: id || null,\n        nombre: nombre || \"\",\n      });\n    } catch (error) {\n      genericException(error);\n    }\n  }, [genericException, loadFields]);\n\n  useEffect(() => {\n    init();\n  }, [init]);\n\n  const redirectEdit = (id) => {\n    navigate(`${baseUrl}/edit/${id}`, { replace: false });\n  };\n\n  const mapValues = (values) => {\n    const { nombre } = values;\n    return {\n      name: nombre,\n    };\n  };\n\n  const submit = async (valuesForm) => {\n    const data = mapValues(valuesForm);\n    const params = {\n      url: id ? `${urlBase}/${id}` : urlBase,\n      data: data,\n    };\n    const method = id ? doPut : doPost;\n\n    try {\n      const resp = await method(params);\n      if (id) {\n        appInfo(messages.crud.update);\n        redirectEdit(resp.id);\n      } else {\n        appSuccess(messages.crud.new);\n        redirectEdit(resp.id);\n      }\n    } catch (error) {\n      console.log(\"ERROR AL GUARDAR \" + error);\n      genericException(error);\n    }\n  };\n\n  const { isLoading } = state;\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <Formik\n      enableReinitialize\n      initialValues={state}\n      validationSchema={validationSchema}\n      onSubmit={submit}\n    >\n      {(subProps) => (\n        <Form>\n          <FormButtons formProps={subProps} />\n          <Grid container direction=\"row\" spacing={2}>\n            <Grid container item spacing={2}>\n              <Grid item xs={6} md={6} xl={6}>\n                <Field label=\"Nombre\" name=\"nombre\" component={TextBase} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nRolForm.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  doPost: PropTypes.func,\n  doGet: PropTypes.func,\n  doPut: PropTypes.func,\n  appInfo: PropTypes.func.isRequired,\n  appSuccess: PropTypes.func.isRequired,\n  genericException: PropTypes.func.isRequired,\n  setViewMode: PropTypes.func,\n  refresh: PropTypes.oneOfType([PropTypes.object]),\n};\n\nexport default withApi(withNotification(RolForm));\n"],"names":["initState","rows","isLoading","withApi","withNotification","_ref","id","doPost","doGet","genericException","appSuccess","setOpenModal","refreshTable","state","setState","useState","selectedRows","setSelectedRows","useEffect","async","params","url","concat","endPoints","seguridad","rolesPermission","getPermission","permisos","error","init","title","masterMessages","rolPermission","_jsx","Dialog","open","onClose","fullWidth","maxWidth","children","Box","p","Loader","_jsxs","_Fragment","DialogTitle","DialogContent","Table","data","columns","name","label","onRowsSelect","dataRows","DialogActions","Button","disabled","length","variant","onClick","values","forEach","row","push","base","roleId","permissions","messages","crud","new","doDelete","appWarning","idToRemove","setIdToRemove","idToUpdate","setIdToUpdate","openModal","child","useRef","closeModalDelete","refreshRolPermission","current","refresh","deleteTitle","deleteMessage","rol","filter","component","DefaultActions","onDelete","openModalDelete","Boolean","ConfirmModal","message","onAccept","delete","PermissionList","closeModalUpdate","forwardedRef","serverSideUrl","serverSideData","onCreate","arguments","undefined","openModalUpdate","updateTitle","breadcrumbs","useParams","tabConfig","TablePermission","PageGeneral","withOutCard","Grid","container","spacing","sx","pb","minHeight","item","xs","md","Card","Form","pl","pr","TabsComponent","config","validationSchema","Yup","urlBase","roles","nombre","compania_id","doPut","appInfo","navigate","useNavigate","loadFields","useCallback","initFormComponent","redirectEdit","replace","Formik","enableReinitialize","initialValues","onSubmit","mapValues","valuesForm","method","resp","update","console","log","subProps","FormButtons","formProps","direction","xl","Field","TextBase"],"sourceRoot":""}