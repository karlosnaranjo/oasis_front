{"version":3,"file":"static/js/101.790eb3c6.chunk.js","mappings":"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","sources":["pages/masters/employees/Form.js","pages/masters/employees/index.js","../node_modules/@mui/system/esm/Box/boxClasses.js","../node_modules/@mui/system/esm/Box/Box.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid,  } from '@mui/material';\r\nimport { Form, Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { SelectBase, TextBase, TextAreaBase, Loader } from 'components';\r\nimport endPoints from 'endPoints/endPoints';\r\nimport messages from 'constantes/messages';\r\nimport { withApi, withNotification } from 'wrappers';\r\nimport { FormButtons } from 'components/controls';\r\nimport { useNavigate } from 'react-router';\r\nimport { Box } from '@mui/system';\r\nimport { getStatusLabel, getStatusValue } from 'utils/formHelpers';\r\nimport DatePickerBase from 'components/pickers/DatePickerBase';\r\n\r\nconst validationSchema = Yup.object({\r\n   \tdocument_type: Yup.string().required('Tipo de documento es requerido'),\r\n\tcode: Yup.string().required('Numero es requerido'),\r\n\tname: Yup.string().required('Nombres es requerido'),\r\n\timage: Yup.string().required('Imagen es requerido'),\r\n\tgender: Yup.string().required('Genero es requerido'),\r\n\tmarital_status: Yup.string().required('Estado Civil es requerido'),\r\n\tdate_of_birth: Yup.string().required('Fecha de Nacimiento es requerido'),\r\n\taddress1: Yup.string().required('Direccion 1 es requerido'),\r\n\taddress2: Yup.string().required('Direccion 2 es requerido'),\r\n\tphone: Yup.string().required('Telefono es requerido'),\r\n\tcellphone: Yup.string().required('Celular es requerido'),\r\n\temail: Yup.string().required('E-Mail es requerido'),\r\n\tjob_title: Yup.string().required('Cargo es requerido'),\r\n\tstatus: Yup.string().required('Estado es requerido'),\r\n \r\n});\r\n\r\nconst urlBase = endPoints.masters.employees.base;\r\n\r\nlet document_typeList = [{\"label\":\"DNI\",\"value\":\"DNI\"},{\"label\":\"RUC\",\"value\":\"RUC\"},{\"label\":\"TI\",\"value\":\"TI\"},{\"label\":\"CEDULA\",\"value\":\"CEDULA\"}];\r\nlet genderList = [{\"label\":\"Masculino\",\"value\":\"Masculino\"},{\"label\":\"Femenino\",\"value\":\"Femenino\"},{\"label\":\"No binario\",\"value\":\"No binario\"},{\"label\":\"Prefiero no especificar\",\"value\":\"Prefiero no especificar\"}];\r\nlet marital_statusList = [{\"label\":\"Soltero(a)\",\"value\":\"Soltero(a)\"},{\"label\":\"Casado(a)\",\"value\":\"Casado(a)\"},{\"label\":\"Union Libre\",\"value\":\"Union Libre\"},{\"label\":\"Separado(a)\",\"value\":\"Separado(a)\"},{\"label\":\"Divorciado(a)\",\"value\":\"Divorciado(a)\"},{\"label\":\"Viudo(a)\",\"value\":\"Viudo(a)\"}];\r\n\r\n\r\nconst baseUrl = '/app/general/masters/employees';\r\n\r\nconst initState = {\r\n    \tdocument_type: \"\",\r\n\tcode: false,\r\n\tname: false,\r\n\timage: false,\r\n\tgender: \"\",\r\n\tmarital_status: \"\",\r\n\tdate_of_birth: false,\r\n\taddress1: false,\r\n\taddress2: false,\r\n\tphone: false,\r\n\tcellphone: false,\r\n\temail: false,\r\n\tjob_title: false,\r\n\tstatus: 1,\r\n\r\n};\r\n\r\nconst selectMap = (data) => {\r\n    return data.map((row) => ({ value: row.id, label: row.name }));\r\n};\r\n\r\nconst EmployeesForm = ({\r\n    id,\r\n    doGet,\r\n    genericException,\r\n    appSuccess,\r\n    doPost,\r\n    doPut,\r\n    appInfo,\r\n    setEditable,\r\n    viewMode,\r\n    refresh,\r\n    }) => {\r\n    const navigate = useNavigate();\r\n    const [state, setState] = useState(initState);\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    // Call to API for load form values\r\n    const loadFields = useCallback(async () => {\r\n    const params = {\r\n        url: endPoints.masters.employees.initForm,\r\n        data: id ? { id: id } : {}\r\n    };\r\n    const resp = await doGet(params);\r\n    return resp;\r\n    }, [doGet, id, refresh, setEditable]);\r\n\r\n    const init = useCallback(async () => {\r\n    try {\r\n        const { employees,  } = await loadFields();\r\n\r\n\r\n        const {\r\ndocument_type, code, name, image, gender, marital_status, date_of_birth, address1, address2, phone, cellphone, email, job_title, status, \r\n        } = employees;\r\n\r\n        setState({\r\n\t\t\tdocument_type: document_type || \"\",\r\n\t\t\tcode: code || \"\",\r\n\t\t\tname: name || \"\",\r\n\t\t\timage: image || \"\",\r\n\t\t\tgender: gender || \"\",\r\n\t\t\tmarital_status: marital_status || \"\",\r\n\t\t\tdate_of_birth: date_of_birth || \"\",\r\n\t\t\taddress1: address1 || \"\",\r\n\t\t\taddress2: address2 || \"\",\r\n\t\t\tphone: phone || \"\",\r\n\t\t\tcellphone: cellphone || \"\",\r\n\t\t\temail: email || \"\",\r\n\t\t\tjob_title: job_title || \"\",\r\n\t\t\tstatus: getStatusLabel(status) || \"Activo\",\r\n\r\n        });\r\n\r\n        setLoading(false);\r\n    } catch (error) {\r\n        console.log('ERROR AL INICIAR'+error);\r\n        genericException(error);\r\n    }\r\n    }, [genericException, loadFields]);\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, [init]);\r\n\r\n    const redirectEdit = (id) => {\r\n        navigate(`${baseUrl}/edit/${id}`, { replace: false });\r\n    };\r\n\r\n    const mapValues = (values) => {\r\n        const { document_type, code, name, image, gender, marital_status, date_of_birth, address1, address2, phone, cellphone, email, job_title, status,  } = values;\r\n        return {\r\ndocument_type, code, name, image, gender, marital_status, date_of_birth, address1, address2, phone, cellphone, email, job_title, status: getStatusValue(status), \r\n        };\r\n    };\r\n\r\n    const submit = async (valuesForm) => {\r\n        const data = mapValues(valuesForm);\r\n        const params = {\r\n            url: id ? `${urlBase}/${id}` : urlBase,\r\n            data: data\r\n        };\r\n        const method = id ? doPut : doPost;\r\n\r\n        try {\r\n            const resp = await method(params);\r\n            if (id) {\r\n                appInfo(messages.crud.update);\r\n                redirectEdit(resp.response.data.id);\r\n            } else {\r\n                appSuccess(messages.crud.new);\r\n                redirectEdit(resp.response.data.id);\r\n            }\r\n        } catch (error) {\r\n            console.log('ERROR AL GUARDAR '+error);\r\n            genericException(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n    <>\r\n        {isLoading ? (\r\n            <Box p={10}>\r\n                <Loader />\r\n            </Box>\r\n        ) : (\r\n            <Formik enableReinitialize initialValues={state} validationSchema={validationSchema} onSubmit={submit}>\r\n                {(subProps) => (\r\n                <Form>\r\n                    {!id && viewMode ? (\r\n                    <FormButtons formProps={subProps} />\r\n                    ) : (\r\n                    <FormButtons formProps={subProps} />\r\n                    )}\r\n                    <Grid container direction=\"row\" spacing={2}>\r\n    \r\n                        <Grid item xs={12} md={6} xl={6}>\r\n                            <Field label=\"Tipo de documento\" name=\"document_type\" component={SelectBase}  items={document_typeList} />\r\n                        </Grid>\r\n            \r\n                        <Grid item xs={6} md={6} xl={6}>\r\n                            <Field label=\"Numero\" name=\"code\" component={TextBase} \r\n                                //onClick={(event) => handleChangecode(event)} \r\n                            />\r\n                        </Grid>\r\n            \r\n                        <Grid item xs={6} md={6} xl={6}>\r\n                            <Field label=\"Nombres\" name=\"name\" component={TextBase} \r\n                                //onClick={(event) => handleChangename(event)} \r\n                            />\r\n                        </Grid>\r\n            \r\n                        <Grid item xs={6} md={6} xl={6}>\r\n                            <Field label=\"Imagen\" name=\"image\" component={TextBase} \r\n                                //onClick={(event) => handleChangeimage(event)} \r\n                            />\r\n                        </Grid>\r\n            \r\n                        <Grid item xs={12} md={6} xl={6}>\r\n                            <Field label=\"Genero\" name=\"gender\" component={SelectBase}  items={genderList} />\r\n                        </Grid>\r\n            \r\n                        <Grid item xs={12} md={6} xl={6}>\r\n                            <Field label=\"Estado Civil\" name=\"marital_status\" component={SelectBase}  items={marital_statusList} />\r\n                        </Grid>\r\n            \r\n                        <Grid item xs={6} md={6} xl={6}>\r\n                            <Field label=\"Fecha de Nacimiento\" name=\"date_of_birth\" component={DatePickerBase} \r\n                                //onClick={(event) => handleChangedate_of_birth(event)} \r\n                            />\r\n                        </Grid>\r\n            \r\n                        <Grid item xs={6} md={6} xl={6}>\r\n                            <Field label=\"Direccion 1\" name=\"address1\" component={TextBase} \r\n                                //onClick={(event) => handleChangeaddress1(event)} \r\n                            />\r\n                        </Grid>\r\n            \r\n                        <Grid item xs={6} md={6} xl={6}>\r\n                            <Field label=\"Direccion 2\" name=\"address2\" component={TextAreaBase} \r\n                                //onClick={(event) => handleChangeaddress2(event)} \r\n                            />\r\n                        </Grid>\r\n            \r\n                        <Grid item xs={6} md={6} xl={6}>\r\n                            <Field label=\"Telefono\" name=\"phone\" component={TextBase} \r\n                                //onClick={(event) => handleChangephone(event)} \r\n                            />\r\n                        </Grid>\r\n            \r\n                        <Grid item xs={6} md={6} xl={6}>\r\n                            <Field label=\"Celular\" name=\"cellphone\" component={TextBase} \r\n                                //onClick={(event) => handleChangecellphone(event)} \r\n                            />\r\n                        </Grid>\r\n            \r\n                        <Grid item xs={6} md={6} xl={6}>\r\n                            <Field label=\"E-Mail\" name=\"email\" component={TextBase} \r\n                                //onClick={(event) => handleChangeemail(event)} \r\n                            />\r\n                        </Grid>\r\n            \r\n                        <Grid item xs={6} md={6} xl={6}>\r\n                            <Field label=\"Cargo\" name=\"job_title\" component={TextBase} \r\n                                //onClick={(event) => handleChangejob_title(event)} \r\n                            />\r\n                        </Grid>\r\n            \r\n                        <Grid item xs={12} md={6} xl={6}>\r\n                            <Field label=\"Estado\" name=\"status\" component={TextBase} disabled={true} />\r\n                        </Grid>\r\n            \r\n                    </Grid>\r\n                </Form>\r\n                )}\r\n            </Formik>\r\n        )}\r\n    </>\r\n    );\r\n};\r\n\r\nEmployeesForm.propTypes = {\r\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    doPost: PropTypes.func,\r\n    doGet: PropTypes.func,\r\n    doPut: PropTypes.func,\r\n    appInfo: PropTypes.func.isRequired,\r\n    appSuccess: PropTypes.func.isRequired,\r\n    genericException: PropTypes.func.isRequired,\r\n    setEditable: PropTypes.func,\r\n    refresh: PropTypes.oneOfType([PropTypes.object])\r\n};\r\n\r\nexport default withApi(withNotification(EmployeesForm));","import React, { useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { PageGeneral, DefaultActions, EstadoChip, Table } from \"components\";\r\nimport endPoints from \"endPoints/endPoints\";\r\nimport messages from \"constantes/messages\";\r\nimport { withApi, withNotification } from \"wrappers\";\r\nimport { ConfirmModal } from \"components/dialogs\";\r\nimport masterMessages from \"constantes/masterMessages\";\r\nimport Form from \"./Form\";\r\nimport { getStatusLabel } from \"utils/formHelpers\";\r\n\r\nconst {\r\n    masters: {\r\n        employees: {\r\n            title,\r\n            deleteTitle,\r\n            deleteMessage,\r\n            changeStatusTitle,\r\n            changeStatusMessage,\r\n        },\r\n    },\r\n} = masterMessages;\r\n\r\nconst permissions = {\r\n    createPermissions: \"general:masters:employees:create\",\r\n    updatePermissions: \"general:masters:employees:update\",\r\n    deletePermissions: \"general:masters:employees:delete\",\r\n    changeStatusPermissions: \"general:masters:employees:changeStatus\",\r\n};\r\n\r\nconst EmployeesGrid = (props) => {\r\n    const [idToEdit, setIdToEdit] = useState(null);\r\n    const [idToDelete, setIdToDelete] = useState(null);\r\n    const [idChangeStatus, setIdChangeStatus] = useState(null);\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const tableRef = useRef(null);\r\n\r\n    const onDelete = async () => {\r\n        const url = `${endPoints.masters.employees.base}/${idToDelete}`;\r\n        try {\r\n            await props.doDelete({ url });\r\n            tableRef.current.refresh();\r\n            closeModalDelete();\r\n            props.appWarning(messages.crud.delete);\r\n        } catch (error) {\r\n            props.appError(messages.crud.fail);\r\n        } finally {\r\n            setIdToDelete(null);\r\n        }\r\n    };\r\n\r\n    const onChangeStatus = async () => {\r\n        const url = `${endPoints.masters.employees.base}/changestatus/${idChangeStatus}`;\r\n        try {\r\n            await props.doPut({ url });\r\n            props.appWarning(messages.crud.changeStatus);\r\n            tableRef.current.refresh();\r\n        } catch (error) {\r\n            props.appError(messages.crud.fail);\r\n        } finally {\r\n            setIdChangeStatus(null);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!openModal) {\r\n            setIdToEdit(null);\r\n        }\r\n    }, [openModal]);\r\n\r\n    const breadcrumbs = [{ label: \"masters\" }, { label: title }];\r\n\r\n    const baseUrl = \"/app/general/masters/employees\";\r\n    const navigate = useNavigate();\r\n\r\n    const redirectNew = () => {\r\n        navigate(`${baseUrl}/new`, { replace: false });\r\n    };\r\n\r\n    const redirectEdit = (idModel) => {\r\n        navigate(`${baseUrl}/edit/${idModel}`, { replace: true, id: idModel });\r\n    };\r\n\r\n    const openModalDelete = ({ id: idToDelete } = {}) =>\r\n        setIdToDelete(idToDelete);\r\n    const closeModalDelete = () => setIdToDelete(null);\r\n\r\n    const actions = (row) => (\r\n        <DefaultActions\r\n            row={row}\r\n            onEdit={() => redirectEdit(row.id)}\r\n            //  onDelete={() => openModalDelete(row)}\r\n            onChangeStatus={() => setIdChangeStatus(row.id)}\r\n        />\r\n    );\r\n\r\n    const columns = [\r\n        { name: 'document_type', label: 'Tipo de documento' },\r\n        { name: 'image', label: 'Imagen' },\r\n        { name: 'code', label: 'Numero' },\r\n        { name: 'name', label: 'Nombres' },\r\n        //  { name: 'gender', label: 'Genero' },\r\n        //  { name: 'date_of_birth', label: 'Fecha de Nacimiento' },\r\n        //  { name: 'address1', label: 'Direccion 1' },\r\n        //  { name: 'address2', label: 'Direccion 2' },\r\n        { name: 'phone', label: 'Telefono' },\r\n        { name: 'cellphone', label: 'Celular' },\r\n        { name: 'email', label: 'E-Mail' },\r\n        { name: 'job_title', label: 'Cargo' },\r\n\r\n        {\r\n            label: \"Estado\",\r\n            filter: false,\r\n            component: (row) => <EstadoChip estado={getStatusLabel(row.status)} />,\r\n        },\r\n        {\r\n            name: \"acciones\",\r\n            width: 130,\r\n            align: \"right\",\r\n            label: \"Acciones\",\r\n            filter: false,\r\n            component: (row) => actions(row),\r\n        },\r\n    ];\r\n    return (\r\n        <PageGeneral breadcrumbs={breadcrumbs}>\r\n            {Boolean(idToDelete) && (\r\n                <ConfirmModal\r\n                    open\r\n                    title={deleteTitle}\r\n                    message={deleteMessage}\r\n                    onClose={closeModalDelete}\r\n                    onAccept={onDelete}\r\n                    createPermissions={permissions.deletePermissions}\r\n                />\r\n            )}\r\n            {Boolean(idChangeStatus) && (\r\n                <ConfirmModal\r\n                    open\r\n                    title={changeStatusTitle}\r\n                    message={changeStatusMessage}\r\n                    onClose={() => setIdChangeStatus(null)}\r\n                    onAccept={() => onChangeStatus()}\r\n                    createPermissions={permissions.changeStatusPermissions}\r\n                />\r\n            )}\r\n            {openModal && (\r\n                <Form\r\n                    id={idToEdit}\r\n                    setOpenModal={setOpenModal}\r\n                    refreshData={tableRef}\r\n                />\r\n            )}\r\n            <Table\r\n                forwardedRef={tableRef}\r\n                onCreate={redirectNew}\r\n                serverSideUrl={endPoints.masters.employees.base}\r\n                columns={columns}\r\n                title={title}\r\n                createPermissions={permissions.createPermissions}\r\n            />\r\n        </PageGeneral>\r\n    );\r\n};\r\n\r\nEmployeesGrid.propTypes = {\r\n    appWarning: PropTypes.func.isRequired,\r\n    genericException: PropTypes.func.isRequired,\r\n    doDelete: PropTypes.func,\r\n    doGet: PropTypes.func\r\n};\r\n\r\nexport default withApi(withNotification(EmployeesGrid));","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '@mui/utils';\nimport createBox from '../createBox';\nimport boxClasses from './boxClasses';\nconst Box = createBox({\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["validationSchema","Yup","document_type","required","code","name","image","gender","marital_status","date_of_birth","address1","address2","phone","cellphone","email","job_title","status","urlBase","endPoints","masters","employees","base","document_typeList","genderList","marital_statusList","initState","withApi","withNotification","_ref","id","doGet","genericException","appSuccess","doPost","doPut","appInfo","setEditable","viewMode","refresh","navigate","useNavigate","state","setState","useState","isLoading","setLoading","loadFields","useCallback","async","params","url","initForm","data","init","getStatusLabel","error","console","log","useEffect","redirectEdit","concat","replace","_jsx","_Fragment","children","Box","p","Loader","Formik","enableReinitialize","initialValues","onSubmit","values","getStatusValue","mapValues","valuesForm","method","resp","messages","crud","update","response","new","subProps","_jsxs","Form","FormButtons","formProps","Grid","container","direction","spacing","item","xs","md","xl","Field","label","component","SelectBase","items","TextBase","DatePickerBase","TextAreaBase","disabled","title","deleteTitle","deleteMessage","changeStatusTitle","changeStatusMessage","masterMessages","permissions","props","idToEdit","setIdToEdit","idToDelete","setIdToDelete","idChangeStatus","setIdChangeStatus","openModal","setOpenModal","tableRef","useRef","breadcrumbs","baseUrl","closeModalDelete","actions","row","DefaultActions","onEdit","idModel","onChangeStatus","columns","filter","EstadoChip","estado","width","align","PageGeneral","Boolean","ConfirmModal","open","message","onClose","onAccept","doDelete","current","appWarning","delete","appError","fail","createPermissions","changeStatus","refreshData","Table","forwardedRef","onCreate","redirectNew","serverSideUrl","generateUtilityClasses","createBox","defaultClassName","boxClasses","root","generateClassName","ClassNameGenerator","generate"],"sourceRoot":""}