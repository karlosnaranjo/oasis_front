{"version":3,"file":"static/js/284.87ab2bc7.chunk.js","mappings":"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","sources":["components/Tab.js","components/controls/ButtonSave.js","components/controls/ButtonBase.js","components/controls/ButtonBack.js","components/controls/ButtonEdit.js","components/controls/SelectBase.js","components/controls/SwitchBase.js","components/controls/TextAreaBase.js","components/controls/TextBase.js","components/controls/DeleteButton.js","components/controls/ChangeStatusButton.js","components/controls/UpdateButton.js","components/controls/CreateButton.js","components/controls/PrintButton.js","components/controls/AutoCompleteBase.js","components/controls/FormButtons.js","components/dialogs/BaseModal.js","components/dialogs/ConfirmModal.js","utils/functions.js","components/table/Head.js","components/table/Row.js","components/table/Body.js","components/table/select/Row.js","components/table/select/Body.js","components/table/Pagination.js","components/table/expandable/Row.js","components/table/expandable/Body.js","components/table/ToolBar.js","components/table/Table.js","components/table/DefaultActions.js","components/Chip.js","components/breadcrumbs/BreadLink.js","components/breadcrumbs/styles.js","components/breadcrumbs/index.js","components/PageGeneral.js","components/estadoChip/styles.js","components/estadoChip/EstadoChip.js","components/inputTag/inputTag.js","components/DropdownMultiple/DropdownMultiple.js","constantes/abreviatura.js","components/ControlGenerator/field-types.js","components/estadoTimeLine/index.js","components/ImagePreview.js","components/config/helpers.js","components/pickers/DatePickerBase.js","constantes/constants.js","constantes/masterMessages.js","constantes/messages.js","utils/formHelpers.js","wrappers/withApi.js","wrappers/WithNotification.js"],"sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Tab } from '@mui/material';\r\nimport { TabContext, TabList, TabPanel } from '@mui/lab';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction TabsComponent({ config, selected }) {\r\n  const [value, setValue] = useState(String(selected));\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <TabContext value={value}>\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <TabList onChange={handleChange}>\r\n          {config.map((tab, index) => (\r\n            <Tab key={`tab${index}`} label={tab.label} value={String(index + 1)} />\r\n          ))}\r\n        </TabList>\r\n      </Box>\r\n      {config.map((panel, index) => (\r\n        <TabPanel key={String(index + 1)} value={String(index + 1)}>\r\n          {panel.component}\r\n        </TabPanel>\r\n      ))}\r\n    </TabContext>\r\n  );\r\n}\r\n\r\nTabsComponent.defaultProps = {\r\n  selected: 1\r\n};\r\n\r\nTabsComponent.propTypes = {\r\n  config: PropTypes.oneOfType([PropTypes.array]),\r\n  // config: PropTypes.oneOfType([PropTypes.array]).isRequired,\r\n  selected: PropTypes.number\r\n};\r\n\r\nexport default TabsComponent;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport { Button } from '@mui/material';\r\n\r\nconst ButtonSave = ({ className, style, disabled, label = 'Guardar', ...rest }) => (\r\n  <Button\r\n    className={className}\r\n    style={style}\r\n    variant=\"contained\"\r\n    type=\"submit\"\r\n    color=\"primary\"\r\n    disabled={disabled}\r\n    startIcon={<SaveIcon />}\r\n    {...rest}\r\n  >\r\n    {label}\r\n  </Button>\r\n);\r\n\r\nButtonSave.defaultProps = {\r\n  className: '',\r\n  style: {},\r\n  disabled: false\r\n};\r\n\r\nButtonSave.propTypes = {\r\n  className: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  label: PropTypes.string,\r\n  style: PropTypes.shape()\r\n};\r\n\r\nexport default ButtonSave;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '@mui/material';\r\n\r\n/**\r\n * This component allows to render a button with the specific go backaction.\r\n * @param {*} param0\r\n */\r\nconst ButtonBase = ({ className, style, label = '', onClick, Icon = <></>, ...rest }) => (\r\n  <Button className={className} style={style} variant=\"contained\" onClick={() => onClick()} startIcon={Icon} {...rest}>\r\n    {label}\r\n  </Button>\r\n);\r\n\r\nButtonBase.propTypes = {\r\n  className: PropTypes.string,\r\n  Icon: PropTypes.node,\r\n  label: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n  style: PropTypes.shape()\r\n};\r\n\r\nButtonBase.defaultProps = {\r\n  className: '',\r\n  style: {}\r\n};\r\n\r\nexport default ButtonBase;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport { Button } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n/**\r\n * This component allows to render a button with the specific go backaction.\r\n * @param {*} param0\r\n */\r\nconst GoBackButton = ({ className, style, label = 'Atrás' }) => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Button\r\n      className={className}\r\n      style={style}\r\n      variant=\"contained\"\r\n      onClick={() => navigate(-1)}\r\n      startIcon={<ArrowBackIcon />}\r\n    >\r\n      {label}\r\n    </Button>\r\n  );\r\n};\r\n\r\nGoBackButton.propTypes = {\r\n  className: PropTypes.string,\r\n  label: PropTypes.string,\r\n  style: PropTypes.shape()\r\n};\r\n\r\nGoBackButton.defaultProps = {\r\n  className: '',\r\n  style: {}\r\n};\r\n\r\nexport default GoBackButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { Button } from '@mui/material';\r\n\r\n/**\r\n * This component allows to render a button with the specific go backaction.\r\n * @param {*} param0\r\n */\r\nconst GoEditButton = ({ className, disabled, style, label = 'Editar', onEdit }) => (\r\n  <Button\r\n    className={className}\r\n    disabled={disabled}\r\n    style={style}\r\n    variant=\"contained\"\r\n    onClick={() => onEdit()}\r\n    startIcon={<EditIcon />}\r\n  >\r\n    {label}\r\n  </Button>\r\n);\r\n\r\nGoEditButton.propTypes = {\r\n  className: PropTypes.string,\r\n  onEdit: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  label: PropTypes.string,\r\n  style: PropTypes.shape()\r\n};\r\n\r\nGoEditButton.defaultProps = {\r\n  className: '',\r\n  style: {}\r\n};\r\n\r\nexport default GoEditButton;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { TextField } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  helperText: {\r\n    color: '#EA4D4D',\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\n/**\r\n * This component allows to render a dropdown ready to work with formik\r\n * @param {*} param0\r\n */\r\nconst SelectBase = React.forwardRef(\r\n  (\r\n    {\r\n      items = [],\r\n      label,\r\n      filter = false,\r\n      onOptionSelected,\r\n      field: { name, onBlur, value, onChange },\r\n      form: { touched, errors, setFieldValue, setFieldTouched },\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const [inputValue, setInputValue] = useState(null);\r\n\r\n    useEffect(() => {\r\n      setInputValue(items.find((item) => item.value === value) || null);\r\n    }, [filter, value, items]);\r\n\r\n    const handleChangeAutocomplete = async (e, itemSelected) => {\r\n      const { value: selectedValue = '', label: selectedLabel = '' } = itemSelected || {};\r\n      if (onOptionSelected) {\r\n        await onOptionSelected(selectedValue, selectedLabel, name);\r\n      }\r\n      setFieldTouched(name, true);\r\n      setFieldValue(name, selectedValue);\r\n    };\r\n\r\n    const hasError = touched[name] && Boolean(errors[name]);\r\n    return (\r\n      <Autocomplete\r\n        id={name}\r\n        name={name}\r\n        value={inputValue}\r\n        onChange={handleChangeAutocomplete}\r\n        getOptionLabel={(option) => option.label || ''}\r\n        // getOptionSelected={(option) => option.value === (inputValue.value ?? '')}\r\n        options={items}\r\n        fullWidth\r\n        {...props}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            size=\"small\"\r\n            label={label}\r\n            variant=\"outlined\"\r\n            inputRef={ref}\r\n            autoComplete=\"off\"\r\n            error={hasError}\r\n            helperText={hasError && errors[name]}\r\n            fullWidth\r\n            margin=\"dense\"\r\n          />\r\n        )}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nSelectBase.propTypes = {\r\n  form: PropTypes.shape({\r\n    errors: PropTypes.shape(),\r\n    touched: PropTypes.shape(),\r\n    setFieldTouched: PropTypes.func.isRequired,\r\n    setFieldValue: PropTypes.func.isRequired\r\n  }).isRequired,\r\n  field: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    onBlur: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\r\n  }).isRequired,\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n    })\r\n  ).isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  filter: PropTypes.bool,\r\n  // Funcion que se ejecutara al momento de seleccionar un Item.\r\n  // retorna el value del item seleccionado solo para autocomplete\r\n  onOptionSelected: PropTypes.func\r\n};\r\n\r\nexport default SelectBase;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Switch, FormControlLabel } from '@mui/material';\r\n\r\nconst SwitchBase = React.forwardRef(\r\n  ({ label, field: { name, value, onChange }, form: { setFieldValue, setFieldTouched }, ...props }, ref) => {\r\n    const handleChange = (event) => {\r\n      if (onChange) {\r\n        onChange(event);\r\n      }\r\n      setFieldTouched(name, true);\r\n      setFieldValue(name, event.target.checked);\r\n    };\r\n\r\n    return (\r\n      <FormControlLabel\r\n        control={\r\n          <Switch id={name} inputRef={ref} checked={Boolean(value)} value={name} onChange={handleChange} {...props} />\r\n        }\r\n        label={label}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nSwitchBase.propTypes = {\r\n  field: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.any])\r\n  }).isRequired,\r\n  form: PropTypes.shape({\r\n    errors: PropTypes.shape(),\r\n    touched: PropTypes.shape(),\r\n    setFieldTouched: PropTypes.func.isRequired,\r\n    setFieldValue: PropTypes.func.isRequired\r\n  }).isRequired,\r\n  label: PropTypes.string,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nSwitchBase.defaultProps = {\r\n  label: ''\r\n};\r\n\r\nexport default SwitchBase;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst TextAreaBase = ({ field: { name, onBlur, value, onChange }, form: { touched, errors }, rows, ...props }) => {\r\n  const hasError = touched[name] && Boolean(errors[name]);\r\n  return (\r\n    <TextField\r\n      id={name}\r\n      size=\"small\"\r\n      margin=\"dense\"\r\n      variant=\"outlined\"\r\n      autoComplete=\"off\"\r\n      multiline\r\n      rows={rows}\r\n      error={hasError}\r\n      helperText={hasError && errors[name]}\r\n      fullWidth\r\n      name={name}\r\n      onBlur={onBlur}\r\n      onChange={onChange}\r\n      value={value}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nTextAreaBase.defaultProps = {\r\n  rows: 2\r\n};\r\n\r\nTextAreaBase.propTypes = {\r\n  rows: PropTypes.number,\r\n  field: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    onBlur: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\r\n  }).isRequired,\r\n  form: PropTypes.shape({\r\n    touched: PropTypes.shape().isRequired,\r\n    errors: PropTypes.shape().isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default TextAreaBase;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst TextBase = React.forwardRef(\r\n  ({ field: { name, value, onBlur, onChange, type = 'text' }, form: { touched, errors }, ...props }, ref) => {\r\n    const hasError = touched[name] && Boolean(errors[name]);\r\n    return (\r\n      <TextField\r\n        id={name}\r\n        size=\"small\"\r\n        inputRef={ref}\r\n        variant=\"outlined\"\r\n        type={type}\r\n        autoComplete=\"off\"\r\n        error={hasError}\r\n        helperText={hasError && errors[name]}\r\n        fullWidth\r\n        name={name}\r\n        onBlur={onBlur}\r\n        onChange={onChange}\r\n        value={value}\r\n        margin=\"dense\"\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nTextBase.propTypes = {\r\n  field: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    onBlur: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    type: PropTypes.string,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\r\n  }).isRequired,\r\n  form: PropTypes.shape({\r\n    touched: PropTypes.shape().isRequired,\r\n    errors: PropTypes.shape().isRequired\r\n  }).isRequired,\r\n  setRef: PropTypes.func\r\n};\r\n\r\nexport default TextBase;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { IconButton } from '@mui/material';\r\nimport { DEFAULT_MUI_DATATABLE_BUTTON_SIZE } from 'constantes/constants';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport useAuth from 'hooks/useAuth';\r\n\r\nconst DeleteButton = ({ onClick, requiredPermissions = '', disabled, ...rest }) => {\r\n  const { checkAccess } = useAuth();\r\n  return (\r\n    <IconButton\r\n      size={DEFAULT_MUI_DATATABLE_BUTTON_SIZE}\r\n      sx={{\r\n        '&:hover': (theme) => ({\r\n          color: theme.palette.primary.main\r\n        })\r\n      }}\r\n      onClick={onClick}\r\n      disabled={!checkAccess(requiredPermissions) || disabled}\r\n      {...rest}\r\n    >\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nDeleteButton.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  checkAccess: PropTypes.func,\r\n  requiredPermissions: PropTypes.string\r\n};\r\n\r\nexport default DeleteButton;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { DEFAULT_MUI_DATATABLE_BUTTON_SIZE } from \"constantes/constants\";\r\nimport ChangeStatusIcon from \"@mui/icons-material/ToggleOn\";\r\nimport useAuth from \"hooks/useAuth\";\r\n\r\nconst ChangeStatusButton = ({\r\n  onClick,\r\n  requiredPermissions = \"\",\r\n  disabled,\r\n  ...rest\r\n}) => {\r\n  const { checkAccess } = useAuth();\r\n  return (\r\n    <IconButton\r\n      size={DEFAULT_MUI_DATATABLE_BUTTON_SIZE}\r\n      sx={{\r\n        \"&:hover\": (theme) => ({\r\n          color: theme.palette.primary.main,\r\n        }),\r\n      }}\r\n      onClick={onClick}\r\n      disabled={!checkAccess(requiredPermissions) || disabled}\r\n      {...rest}\r\n    >\r\n      <ChangeStatusIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nChangeStatusButton.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  checkAccess: PropTypes.func,\r\n  requiredPermissions: PropTypes.string,\r\n};\r\n\r\nexport default ChangeStatusButton;\r\n","import React, { useMemo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { DEFAULT_MUI_DATATABLE_BUTTON_SIZE } from \"constantes/constants\";\r\nimport Edit from \"@mui/icons-material/Edit\";\r\nimport useAuth from \"hooks/useAuth\";\r\n\r\nconst UpdateButton = ({ onClick, requiredPermissions = \"\", disabled }) => {\r\n  const { checkAccess } = useAuth();\r\n  const isDisabled = useMemo(\r\n    () => !checkAccess(requiredPermissions) || disabled,\r\n    [checkAccess, requiredPermissions, disabled]\r\n  );\r\n  return (\r\n    <IconButton\r\n      size={DEFAULT_MUI_DATATABLE_BUTTON_SIZE}\r\n      sx={{\r\n        \"&:hover\": (theme) => ({\r\n          color: theme.palette.primary.main,\r\n        }),\r\n      }}\r\n      onClick={onClick}\r\n      disabled={isDisabled}\r\n    >\r\n      <Edit />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nUpdateButton.defaultProps = {\r\n  requiredPermissions: [],\r\n};\r\n\r\nUpdateButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  requiredPermissions: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default UpdateButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { IconButton } from '@mui/material';\r\nimport AddCircle from '@mui/icons-material/AddCircleOutline';\r\nimport useAuth from 'hooks/useAuth';\r\n\r\nconst CreateButton = ({ onClick, requiredPermissions = '', disabled, ...rest }) => {\r\n  const { checkAccess } = useAuth();\r\n  return (\r\n    <IconButton\r\n      sx={{\r\n        '&:hover': (theme) => ({\r\n          color: theme.palette.primary.main\r\n        })\r\n      }}\r\n      onClick={() => onClick()}\r\n      disabled={!checkAccess(requiredPermissions) || disabled}\r\n      {...rest}\r\n    >\r\n      <AddCircle />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nCreateButton.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  checkAccess: PropTypes.func,\r\n  requiredPermissions: PropTypes.string\r\n};\r\n\r\nexport default CreateButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { IconButton } from '@mui/material';\r\nimport { DEFAULT_MUI_DATATABLE_BUTTON_SIZE } from 'constantes/constants';\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport useAuth from 'hooks/useAuth';\r\n\r\nconst PrintButton = ({ onClick, requiredPermissions = [], disabled, ...rest }) => {\r\n  const { checkAccess } = useAuth();\r\n  return (\r\n    <IconButton\r\n      size={DEFAULT_MUI_DATATABLE_BUTTON_SIZE}\r\n      sx={{\r\n        '&:hover': (theme) => ({\r\n          color: theme.palette.primary.main\r\n        })\r\n      }}\r\n      onClick={onClick}\r\n      disabled={!checkAccess(requiredPermissions) || disabled}\r\n      {...rest}\r\n    >\r\n      <PrintIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nPrintButton.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  checkAccess: PropTypes.func,\r\n  requiredPermissions: PropTypes.arrayOf(PropTypes.string)\r\n};\r\n\r\nexport default PrintButton;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { CircularProgress, TextField } from '@mui/material';\r\nimport KeyboardHideIcon from '@mui/icons-material/KeyboardHide';\r\nimport { withApi, withNotification } from 'wrappers';\r\n\r\n/**\r\n * This component allows to render a dropdown ready to work with formik\r\n * @param {*} param0\r\n */\r\n\r\nconst WAIT = 1000;\r\nlet timeout = null;\r\nconst AutocompleteBase = ({\r\n  label,\r\n  onOptionSelected,\r\n  field: { name, value },\r\n  form: { touched, errors, setFieldValue },\r\n  doGet,\r\n  searchValue,\r\n  disabled,\r\n  url,\r\n  limit,\r\n  genericException,\r\n  requestParams\r\n}) => {\r\n  const [options, setOptions] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [findValue, setFindValue] = useState(searchValue);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = async (e, itemSelected) => {\r\n    if (onOptionSelected) {\r\n      await onOptionSelected(itemSelected);\r\n    } else {\r\n      setFieldValue(name, itemSelected?.value ?? '');\r\n    }\r\n  };\r\n\r\n  const filter = useCallback(async (findValue) => {\r\n    if (findValue) {\r\n      const getOptions = async () => {\r\n        let resp = [];\r\n        const fetchParams = {\r\n          url,\r\n          data: {\r\n            search: findValue ?? '',\r\n            limit,\r\n            ...requestParams\r\n          }\r\n        };\r\n        try {\r\n          resp = await doGet(fetchParams);\r\n        } catch (error) {\r\n          genericException(error);\r\n        }\r\n        return resp;\r\n      };\r\n      setOptions(await getOptions());\r\n      setLoading(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    clearTimeout(timeout);\r\n    if (findValue && open) {\r\n      setLoading(true);\r\n      timeout = setTimeout(() => filter(findValue), WAIT);\r\n    }\r\n  }, [filter, findValue, open]);\r\n\r\n  const onClose = async () => {\r\n    setOpen(false);\r\n    if (loading) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const onOpen = async () => {\r\n    setOpen(true);\r\n    setFindValue('');\r\n    if (loading) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const hasError = touched[name] && Boolean(errors[name]);\r\n  return (\r\n    <Autocomplete\r\n      id={name}\r\n      name={name}\r\n      disabled={disabled}\r\n      clearText=\"Limpiar\"\r\n      closeText=\"Cerrar\"\r\n      openText=\"Abrir\"\r\n      noOptionsText={findValue === '' ? 'Escriba para iniciar la búsqueda' : 'Sin opciones'}\r\n      loadingText={findValue ? 'Buscando...' : 'Iniciar busqueda'}\r\n      loading={loading}\r\n      onOpen={onOpen}\r\n      onClose={onClose}\r\n      inputValue={findValue}\r\n      getOptionLabel={(option) => option.label || ''}\r\n      isOptionEqualToValue={(option) => option.value === (value ?? '')}\r\n      onChange={handleChange}\r\n      onInputChange={(event, newInputValue, reason) => {\r\n        if (open || reason === 'clear') setFindValue(newInputValue);\r\n      }}\r\n      options={options}\r\n      popupIcon={<KeyboardHideIcon />}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          size=\"small\"\r\n          label={label}\r\n          variant=\"outlined\"\r\n          autoComplete=\"off\"\r\n          error={hasError}\r\n          helperText={hasError && errors[name]}\r\n          fullWidth\r\n          margin=\"dense\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <>\r\n                {loading ? (\r\n                  <CircularProgress\r\n                    color=\"inherit\"\r\n                    size={20}\r\n                    sx={{\r\n                      marginRight: 4\r\n                    }}\r\n                  />\r\n                ) : null}\r\n                {params.InputProps.endAdornment}\r\n              </>\r\n            )\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nAutocompleteBase.defaultProps = {\r\n  limit: 10,\r\n  disabled: false\r\n  // searchValue: ''\r\n};\r\n\r\nAutocompleteBase.propTypes = {\r\n  form: PropTypes.shape({\r\n    errors: PropTypes.shape(),\r\n    touched: PropTypes.shape(),\r\n    setFieldTouched: PropTypes.func.isRequired,\r\n    setFieldValue: PropTypes.func.isRequired\r\n  }).isRequired,\r\n  field: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    onBlur: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\r\n  }).isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  // el valor que se indicará en el input de busqueda, por defecto vacio cuando\r\n  // no se especifica o cuando no se especifica nada en el value desde field.value y es requerido\r\n  // cuando se especifica un value desde field.value\r\n  searchValue: PropTypes.string,\r\n  // Funcion que se ejecutara al momento de seleccionar un Item.\r\n  onOptionSelected: PropTypes.func,\r\n  // Parametros adicionales que se mandaran al llamado de la api especificado en la props url\r\n  requestParams: PropTypes.oneOfType([PropTypes.object]),\r\n  // Props boleana para espeficiar si el campo esta habilitado o inhabilitado para edición\r\n  // se adiciona el prop de string para evitar error de prop\r\n  // ya que al seleccionar un registro lo envia como vacio.\r\n  disabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  // Ruta de la api para consultar los registros del input.\r\n  url: PropTypes.string.isRequired,\r\n  limit: PropTypes.number,\r\n  // Una funcion que será usada para extraer y procesar las respuestas ajax.\r\n  // Por defecto null, cuando no se especifica, los datos serán procesados como:\r\n  // response.json() -> then -> (json) => json.data.data\r\n  dataProcessor: PropTypes.func,\r\n  doGet: PropTypes.func.isRequired,\r\n  genericException: PropTypes.func.isRequired\r\n};\r\n\r\nexport default React.memo(withApi(withNotification(AutocompleteBase)));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography, Grid, Box, Button } from '@mui/material';\r\nimport { withStyles } from '@mui/styles';\r\nimport ButtonBack from './ButtonBack';\r\nimport ButtonSave from './ButtonSave';\r\nimport { ButtonEdit } from '.';\r\n\r\n/**\r\n * Description:\r\n * Componente para usar dentro de los formularios,\r\n * tanto en los formularios modalizados como en los\r\n * formularios de las vistas aplicando la guia de\r\n * estilos establecida en la aplicación.\r\n *\r\n * Usage:\r\n * Form View:\r\n * <FormButtons formProps={subProps} title=\"titulo\"/>\r\n *\r\n * Form Modal:\r\n * <FormButtons formProps={subProps} onClose={onCloseFunc} />\r\n *\r\n * With Children:\r\n * <FormButtons props>\r\n *  <Other component />\r\n * </FormButtons>\r\n *\r\n * @param {*} props\r\n * @returns NodeComponent\r\n */\r\n\r\nconst FormButtons = ({ formProps: { isSubmitting = false } = {}, disableEdit, onClose, onEdit, classes, children }) => (\r\n  <Grid item container justifyContent=\"flex-end\">\r\n    <Box display=\"flex\" flexDirection=\"row\" m={2}>\r\n      {onEdit ? (\r\n        <Typography className={classes.typography}>\r\n          <ButtonEdit disabled={isSubmitting || disableEdit} onEdit={onEdit} />\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.typography}>\r\n          <ButtonSave disabled={isSubmitting} />\r\n        </Typography>\r\n      )}\r\n      {onClose && (\r\n        <Typography className={classes.typography}>\r\n          <Button disabled={isSubmitting} variant=\"contained\" onClick={onClose}>\r\n            Cancelar\r\n          </Button>\r\n        </Typography>\r\n      )}\r\n      <Typography className={classes.typography}>\r\n        <ButtonBack disabled={isSubmitting} />\r\n      </Typography>\r\n      {children}\r\n    </Box>\r\n  </Grid>\r\n);\r\n\r\nFormButtons.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  onEdit: PropTypes.func,\r\n  disableEdit: PropTypes.bool,\r\n  classes: PropTypes.shape().isRequired,\r\n  formProps: PropTypes.shape({\r\n    isSubmitting: PropTypes.bool.isRequired,\r\n    isValid: PropTypes.bool.isRequired\r\n  })\r\n};\r\n\r\nconst styles = {\r\n  typography: {\r\n    marginRight: 10\r\n  }\r\n};\r\n\r\nexport default withStyles(styles)(FormButtons);\r\n","import React from 'react';\r\nimport { Dialog } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BaseModal = ({ open, onClose, children, modalProps }) => (\r\n  <Dialog {...modalProps} fullWidth open={open} onClose={onClose} keepMounted={false}>\r\n    {children}\r\n  </Dialog>\r\n);\r\n\r\nBaseModal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  modalProps: PropTypes.oneOfType([PropTypes.object]),\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool\r\n};\r\n\r\nexport default BaseModal;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DialogTitle, DialogContent, DialogActions, Typography, Button } from '@mui/material';\r\nimport { Check } from '@mui/icons-material';\r\nimport BaseModal from './BaseModal';\r\n\r\nconst ConfirmModal = ({\r\n  open,\r\n  onClose,\r\n  title,\r\n  modalProps,\r\n  message,\r\n  onCancel,\r\n  onAccept,\r\n  acceptLabel = 'Aceptar',\r\n  cancelLabel = 'Cancelar'\r\n}) => {\r\n  const [disabled, setDisabled] = useState(false);\r\n  const onPressCancel = () => {\r\n    if (onCancel) {\r\n      onCancel();\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  const onPressAccept = async () => {\r\n    setDisabled(true);\r\n    if (onAccept) {\r\n      await onAccept();\r\n    }\r\n  };\r\n  return (\r\n    <BaseModal open={open} onClose={onClose} title={title} {...modalProps}>\r\n      {title && <DialogTitle align=\"center\">{title}</DialogTitle>}\r\n      {message && (\r\n        <DialogContent>\r\n          <Typography variant=\"body2\" align=\"center\">\r\n            {message}\r\n          </Typography>\r\n        </DialogContent>\r\n      )}\r\n      <DialogActions>\r\n        <Button\r\n          disableElevation\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled={disabled}\r\n          startIcon={<Check />}\r\n          onClick={onPressAccept}\r\n        >\r\n          {acceptLabel}\r\n        </Button>\r\n        <Button color=\"primary\" onClick={onPressCancel}>\r\n          {cancelLabel}\r\n        </Button>\r\n      </DialogActions>\r\n    </BaseModal>\r\n  );\r\n};\r\n\r\nConfirmModal.propTypes = {\r\n  // Text to be displayed in the accept button.\r\n  acceptLabel: PropTypes.string,\r\n  // Text to be displayed in the cancel button.\r\n  cancelLabel: PropTypes.string,\r\n  // Message to be displayed in the body section.\r\n  message: PropTypes.string,\r\n  // other props for the modal base.\r\n  modalProps: PropTypes.oneOfType([PropTypes.object]),\r\n  // Event to be executed on the accept button.\r\n  onAccept: PropTypes.func,\r\n  // Event to be executed on the cancel button.\r\n  onCancel: PropTypes.func,\r\n  // Event to close the modal\r\n  onClose: PropTypes.func,\r\n  // Indicate whether the modal is opened or closed.\r\n  open: PropTypes.bool,\r\n  // Main title for the modal.\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import { ReportableException } from 'exceptions';\r\nimport messages from 'constantes/messages';\r\n\r\n/**\r\n * Esta función permite limpiar una cadena y usarse dentro de expresiones regulares.\r\n */\r\nexport const escapeRegExp = (string) => string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n\r\n/**\r\n * Función que intenta extraer de un objeto un elemento por medio\r\n * de notacion de punto\r\n *\r\n * @param {object} object el objeto al cual se el intentará extraer el campo u elemento\r\n * @param {string} dotNotation la notacion por la cual se accedería al campo por medio\r\n * de puntos.\r\n */\r\nexport const dotNotationExtractor = (object, dotNotation) =>\r\n  dotNotation.split('.').reduce((total, currentValue) => {\r\n    if (total) {\r\n      return total[currentValue];\r\n    }\r\n    return null;\r\n  }, object);\r\n\r\n/**\r\n * Función que contiene una lógica básica para determinar si un elemento\r\n * es de tipo funcion.\r\n *\r\n * @param {any} toCheck el elemento a verificar\r\n * @return {boolean} true si el elemento pasa como funcion.\r\n */\r\nexport const isFunction = (toCheck) => typeof toCheck === 'function';\r\n\r\n/**\r\n * Función genérica que busca manejar las exceptions lanzadas desde\r\n * la interaccion con el back. Detecta básicamente el tipo de exception\r\n * y la administra o notificando de diferente manera.\r\n *\r\n * @param {Error} exception un error entregado desde un catch\r\n * @param {withApi} object un descendente de withNotification\r\n * @see witNotification wrapper.\r\n */\r\nexport const genericExceptionHandler = (exception, object) => {\r\n  if (exception instanceof ReportableException) {\r\n    object.props.appWarning(exception.message);\r\n  } else {\r\n    object.props.appError(messages.crud.fail, exception);\r\n  }\r\n};\r\n\r\nexport const fireDownloadFromResponse = async (httpResponse, filename) => {\r\n  const blob = await httpResponse.blob();\r\n  const downloadUrl = window.URL.createObjectURL(new Blob([blob]));\r\n  const a = document.createElement('a');\r\n  a.href = downloadUrl;\r\n  a.download = filename;\r\n  a.click();\r\n  const { parentNode } = a;\r\n  if (parentNode) {\r\n    parentNode.removeChild(a);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TableHead, TableRow, TableCell, TableSortLabel, Checkbox } from '@mui/material';\r\n\r\nconst styles = {\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1\r\n  }\r\n};\r\n\r\nfunction Header({\r\n  columns,\r\n  orderBy,\r\n  order,\r\n  setOrderBy,\r\n  extraColumn,\r\n  handleSelectAllClick,\r\n  selected,\r\n  totalRow,\r\n  expandable\r\n}) {\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {extraColumn && (\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              onChange={handleSelectAllClick}\r\n              checked={selected.length > 0 && selected.length === totalRow}\r\n              indeterminate={selected.length > 0 && selected.length < totalRow}\r\n            />\r\n          </TableCell>\r\n        )}\r\n        {Boolean(expandable) && <TableCell />}\r\n        {columns.map(({ filter = true, ...row }, index) => {\r\n          const indice = index;\r\n          return (\r\n            <TableCell\r\n              key={indice}\r\n              align={row.align || 'left'}\r\n              sortDirection={orderBy === row.name ? order : false}\r\n              style={{ width: row.width ? row.width : '' }}\r\n            >\r\n              {filter ? (\r\n                <TableSortLabel\r\n                  active={orderBy === row.name}\r\n                  direction={orderBy === row.name ? order : 'asc'}\r\n                  onClick={() => setOrderBy(row.name)}\r\n                >\r\n                  {row.label}\r\n                  {orderBy === row.name ? (\r\n                    <span style={styles.visuallyHidden}>\r\n                      {order === 'desc' ? 'ordenar descendientemente' : 'ordenar ascendentemente'}\r\n                    </span>\r\n                  ) : null}\r\n                </TableSortLabel>\r\n              ) : (\r\n                row.label\r\n              )}\r\n            </TableCell>\r\n          );\r\n        })}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  columns: PropTypes.oneOfType([PropTypes.array]).isRequired,\r\n  orderBy: PropTypes.string,\r\n  order: PropTypes.string,\r\n  setOrderBy: PropTypes.func,\r\n  extraColumn: PropTypes.bool,\r\n  expandable: PropTypes.bool,\r\n  handleSelectAllClick: PropTypes.func,\r\n  selected: PropTypes.oneOfType([PropTypes.array]),\r\n  totalRow: PropTypes.number\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TableRow, TableCell } from \"@mui/material\";\r\nimport { dotNotationExtractor, isFunction } from \"utils/functions\";\r\nimport { formatter } from \"constantes/constants\";\r\nimport { getStatusLabel } from \"utils/formHelpers\";\r\n\r\nfunction Row({ columns, data = {} }) {\r\n  return (\r\n    <TableRow>\r\n      {columns.map((col, index) => {\r\n        let cellContent = col.component || dotNotationExtractor(data, col.name);\r\n        cellContent = isFunction(cellContent) ? cellContent(data) : cellContent;\r\n        cellContent =\r\n          col.type === \"number\"\r\n            ? formatter.format(cellContent ?? 0)\r\n            : cellContent;\r\n        cellContent =\r\n          col.name == \"status\" ? getStatusLabel(cellContent) : cellContent;\r\n        return (\r\n          <TableCell\r\n            key={`Col${String(index)}`}\r\n            align={col.align || \"left\"}\r\n            style={{ width: col.width ? col.width : \"\" }}\r\n          >\r\n            {cellContent}\r\n          </TableCell>\r\n        );\r\n      })}\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nRow.propTypes = {\r\n  columns: PropTypes.oneOfType([PropTypes.array]).isRequired,\r\n  data: PropTypes.oneOfType([PropTypes.object]),\r\n};\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  TableBody,\r\n  CircularProgress,\r\n  TableRow,\r\n  TableCell,\r\n  Grid,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport Row from \"./Row\";\r\n\r\nfunction Body({ columns, data, isLoading }) {\r\n  return (\r\n    <TableBody>\r\n      {isLoading || !Array.isArray(data) || data.length === 0 ? (\r\n        <TableRow>\r\n          <TableCell colSpan={columns.length}>\r\n            <Grid\r\n              style={{ display: \"flex\", justifyContent: \"center\", margin: 10 }}\r\n            >\r\n              {isLoading && <CircularProgress color=\"secondary\" />}\r\n              {!isLoading && (\r\n                <Typography>No hay datos para mostrar...</Typography>\r\n              )}\r\n            </Grid>\r\n          </TableCell>\r\n        </TableRow>\r\n      ) : (\r\n        Array.isArray(data) &&\r\n        data.map((row, index) => (\r\n          <Row key={`R${String(index)}`} columns={columns} data={row} />\r\n        ))\r\n      )}\r\n    </TableBody>\r\n  );\r\n}\r\n\r\nBody.propTypes = {\r\n  columns: PropTypes.oneOfType([PropTypes.array]).isRequired,\r\n  data: PropTypes.oneOfType([PropTypes.array]),\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nexport default Body;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TableRow, TableCell, Checkbox } from '@mui/material';\r\nimport { dotNotationExtractor, isFunction } from 'utils/functions';\r\nimport { formatter } from 'constantes/constants';\r\n\r\nfunction Row({ columns, data = {}, checked = false, setCheck }) {\r\n  return (\r\n    <TableRow hover onClick={() => setCheck(data)} selected={checked}>\r\n      <TableCell padding=\"checkbox\">\r\n        <Checkbox checked={checked} disabled={data.selectable ? Boolean(data.selectable) : false} />\r\n      </TableCell>\r\n      {columns.map((col, index) => {\r\n        let cellContent = col.component || dotNotationExtractor(data, col.name);\r\n        cellContent = isFunction(cellContent) ? cellContent(data) : cellContent;\r\n        cellContent = col.type === 'number' ? formatter.format(cellContent ?? 0) : cellContent;\r\n        return (\r\n          <TableCell\r\n            key={`Col${String(index)}`}\r\n            align={col.align || 'left'}\r\n            style={{ width: col.width ? col.width : '' }}\r\n          >\r\n            {cellContent}\r\n          </TableCell>\r\n        );\r\n      })}\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nRow.propTypes = {\r\n  columns: PropTypes.oneOfType([PropTypes.array]).isRequired,\r\n  data: PropTypes.oneOfType([PropTypes.object]),\r\n  checked: PropTypes.bool,\r\n  setCheck: PropTypes.func\r\n};\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TableBody, CircularProgress, TableRow, TableCell, Grid, Typography } from '@mui/material';\r\nimport Row from './Row';\r\n\r\nclass Body extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, data, columns, setCheck, verifyExist } = this.props;\r\n    return (\r\n      <TableBody>\r\n        {isLoading || !Array.isArray(data) || data.length === 0 ? (\r\n          <TableRow>\r\n            <TableCell colSpan={columns.length + 1}>\r\n              <Grid style={{ display: 'flex', justifyContent: 'center', margin: 10 }}>\r\n                {isLoading && <CircularProgress color=\"secondary\" />}\r\n                {!isLoading && <Typography>No hay datos para mostrar...</Typography>}\r\n              </Grid>\r\n            </TableCell>\r\n          </TableRow>\r\n        ) : (\r\n          Array.isArray(data) &&\r\n          data.map((row, index) => (\r\n            <Row\r\n              key={`R${String(index)}`}\r\n              columns={columns}\r\n              data={row}\r\n              setCheck={setCheck}\r\n              checked={verifyExist(row) >= 0}\r\n            />\r\n          ))\r\n        )}\r\n      </TableBody>\r\n    );\r\n  }\r\n}\r\n\r\nBody.propTypes = {\r\n  columns: PropTypes.oneOfType([PropTypes.array]).isRequired,\r\n  data: PropTypes.oneOfType([PropTypes.array]),\r\n  isLoading: PropTypes.bool,\r\n  setCheck: PropTypes.func,\r\n  verifyExist: PropTypes.func\r\n};\r\n\r\nexport default Body;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TablePagination } from '@mui/material';\r\n\r\nfunction Pagination(props) {\r\n  const { page, rowsPerPage, total, setPage, setRowsPerPage } = props;\r\n  return (\r\n    <TablePagination\r\n      rowsPerPageOptions={[10, 20, 50, 100]} // Opciones disponibles para el cambio de paginas\r\n      component=\"div\"\r\n      count={total}\r\n      rowsPerPage={rowsPerPage}\r\n      page={page}\r\n      onPageChange={(event, nextPage) => setPage(nextPage)}\r\n      onRowsPerPageChange={(event) => setRowsPerPage(event.target.value)}\r\n    />\r\n  );\r\n}\r\n\r\nPagination.propTypes = {\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  setPage: PropTypes.func,\r\n  setRowsPerPage: PropTypes.func\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TableRow, TableCell, IconButton } from '@mui/material';\r\nimport { dotNotationExtractor, isFunction } from 'utils/functions';\r\nimport { formatter, DEFAULT_MUI_DATATABLE_BUTTON_SIZE } from 'constantes/constants';\r\nimport { KeyboardArrowRight, KeyboardArrowDown } from '@mui/icons-material';\r\n\r\nfunction Row({ columns, data = {}, openExpandable, expanded }) {\r\n  return (\r\n    <TableRow>\r\n      <TableCell>\r\n        <IconButton onClick={openExpandable} size={DEFAULT_MUI_DATATABLE_BUTTON_SIZE}>\r\n          {expanded ? <KeyboardArrowDown /> : <KeyboardArrowRight />}\r\n        </IconButton>\r\n      </TableCell>\r\n      {columns.map((col, index) => {\r\n        let cellContent = col.component || dotNotationExtractor(data, col.name);\r\n        cellContent = isFunction(cellContent) ? cellContent(data) : cellContent;\r\n        cellContent = col.type === 'number' ? formatter.format(cellContent ?? 0) : cellContent;\r\n        return (\r\n          !col.hide && (\r\n            <TableCell\r\n              key={`Col${String(index)}`}\r\n              align={col.align || 'left'}\r\n              style={{ width: col.width ? col.width : '' }}\r\n            >\r\n              {cellContent}\r\n            </TableCell>\r\n          )\r\n        );\r\n      })}\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nRow.propTypes = {\r\n  columns: PropTypes.oneOfType([PropTypes.array]).isRequired,\r\n  data: PropTypes.oneOfType([PropTypes.object]),\r\n  openExpandable: PropTypes.func,\r\n  expanded: PropTypes.bool\r\n};\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TableBody, CircularProgress, TableRow, TableCell, Grid, Typography } from '@mui/material';\r\nimport Row from './Row';\r\n\r\nfunction Body({ columns, data, isLoading, expandable }) {\r\n  const [expandible, setExpandible] = React.useState(null);\r\n  return (\r\n    <TableBody>\r\n      {isLoading || !Array.isArray(data) || data.length === 0 ? (\r\n        <TableRow>\r\n          <TableCell colSpan={columns.length + 1}>\r\n            <Grid style={{ display: 'flex', justifyContent: 'center', margin: 10 }}>\r\n              {isLoading && <CircularProgress color=\"secondary\" />}\r\n              {!isLoading && <Typography>No hay datos para mostrar...</Typography>}\r\n            </Grid>\r\n          </TableCell>\r\n        </TableRow>\r\n      ) : (\r\n        Array.isArray(data) &&\r\n        data.map((row, index) => (\r\n          <React.Fragment key={`F${String(index)}`}>\r\n            <Row\r\n              key={`R${String(index)}`}\r\n              columns={columns}\r\n              data={row}\r\n              openExpandable={() => setExpandible(index === expandible ? null : index)}\r\n              expanded={expandible === index}\r\n            />\r\n            {expandible === index && (\r\n              <TableRow key={`ER${String(index)}`}>\r\n                <TableCell colSpan={columns.length + 1} key={`EC${String(index)}`}>\r\n                  {expandable(row)}\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </React.Fragment>\r\n        ))\r\n      )}\r\n    </TableBody>\r\n  );\r\n}\r\n\r\nBody.propTypes = {\r\n  columns: PropTypes.oneOfType([PropTypes.array]).isRequired,\r\n  data: PropTypes.oneOfType([PropTypes.array]),\r\n  isLoading: PropTypes.bool,\r\n  expandable: PropTypes.func\r\n};\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Toolbar,\r\n  Typography,\r\n  Tooltip,\r\n  IconButton,\r\n  Modal,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { FilterList } from \"@mui/icons-material\";\r\nimport { CreateButton } from \"components/controls\";\r\n\r\nconst styles = {\r\n  title: {\r\n    flex: 1,\r\n  },\r\n};\r\n\r\nfunction ToolBar({\r\n  title,\r\n  columns,\r\n  filters,\r\n  setFilter,\r\n  onCreate,\r\n  createPermissions,\r\n  ExtraToolBar,\r\n  disableCreateButton,\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [search, setSearch] = React.useState(filters);\r\n  const show = Boolean(anchorEl);\r\n\r\n  const onClick = (event) => setAnchorEl(event.currentTarget);\r\n  const onClose = () => setAnchorEl(null);\r\n\r\n  const changeSearch = ({ target }) => {\r\n    setSearch({ ...search, [target.name]: target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toolbar>\r\n        <Typography\r\n          style={styles.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title || \"\"}\r\n        </Typography>\r\n        <Tooltip title=\"Filtros\">\r\n          <IconButton\r\n            onClick={onClick}\r\n            sx={{\r\n              \"&:hover\": (theme) => ({\r\n                color: theme.palette.primary.main,\r\n              }),\r\n            }}\r\n          >\r\n            <FilterList />\r\n          </IconButton>\r\n        </Tooltip>\r\n        {onCreate && (\r\n          <CreateButton\r\n            onClick={onCreate}\r\n            requiredPermissions={createPermissions}\r\n            disabled={disableCreateButton}\r\n          />\r\n        )}\r\n        {ExtraToolBar}\r\n      </Toolbar>\r\n      {show && (\r\n        <Modal onClose={onClose} open>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            sx={{\r\n              top: \"25%\",\r\n              left: \"30%\",\r\n              backgroundColor: \"white\",\r\n              justifyContent: \"center\",\r\n              outline: \"none\",\r\n              // paddingBottom: 4,\r\n              // paddingTop: 20,\r\n              position: \"absolute\",\r\n              width: \"60%\",\r\n              borderRadius: 2,\r\n            }}\r\n          >\r\n            <>\r\n              {/* <Grid container direction=\"row\" spacing={2} style={{ padding: 10 }}>\r\n                <Typography variant=\"h6\">Filtros</Typography>\r\n              </Grid> */}\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                spacing={2}\r\n                style={{ padding: 10 }}\r\n              >\r\n                {columns.map(\r\n                  ({ name, label, filter = true }) =>\r\n                    filter && (\r\n                      <Grid key={`G${name}`} item xs={6}>\r\n                        <TextField\r\n                          fullWidth\r\n                          key={`T${name}`}\r\n                          name={name}\r\n                          label={label}\r\n                          type=\"search\"\r\n                          autoComplete=\"off\"\r\n                          value={search[name] || \"\"}\r\n                          onChange={changeSearch}\r\n                        />\r\n                      </Grid>\r\n                    )\r\n                )}\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                spacing={2}\r\n                style={{ padding: 10 }}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    style={{ marginRight: 10 }}\r\n                    onClick={() => setFilter(search)}\r\n                  >\r\n                    Filtrar\r\n                  </Button>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    onClick={() => {\r\n                      setFilter({});\r\n                      setSearch({});\r\n                      onClose();\r\n                    }}\r\n                  >\r\n                    Reiniciar\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n              {/* </fieldset> */}\r\n            </>\r\n          </Grid>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nToolBar.propTypes = {\r\n  title: PropTypes.string,\r\n  ExtraToolBar: PropTypes.node,\r\n  columns: PropTypes.oneOfType([PropTypes.array]),\r\n  filters: PropTypes.oneOfType([PropTypes.object]),\r\n  setFilter: PropTypes.func,\r\n  onCreate: PropTypes.func,\r\n  disableCreateButton: PropTypes.bool,\r\n  createPermissions: PropTypes.string,\r\n};\r\n\r\nexport default ToolBar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Paper, TableContainer, Table as TableM } from \"@mui/material\";\r\nimport { withApi, withNotification } from \"wrappers\";\r\nimport { DEFAULT_MUI_DATATABLE_SIZE } from \"constantes/constants\";\r\nimport { isFunction } from \"utils/functions\";\r\nimport Head from \"./Head\";\r\nimport Body from \"./Body\";\r\nimport BodySelect from \"./select/Body\";\r\nimport Pagination from \"./Pagination\";\r\nimport BodyExpandable from \"./expandable/Body\";\r\nimport ToolBar from \"./ToolBar\";\r\n\r\n/* Para actualizar la tabla serverside\r\n * ------ En el componente padre -------\r\n * -> Crear la referencia\r\n *    this.child = React.createRef();\r\n * -> Enviar referencia por props\r\n *    <TableGeneral forwardedRef={this.child} />\r\n * -> Para ejecutar el metodo refrescar\r\n *    this.child.current.refresh();\r\n */\r\nclass Table extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      page: 0,\r\n      rowsPerPage: 10,\r\n      order: \"\",\r\n      orderBy: \"\",\r\n      total: 0,\r\n      data: [],\r\n      selected: [],\r\n      filters: {},\r\n    };\r\n    const { forwardedRef } = this.props;\r\n    if (forwardedRef) {\r\n      forwardedRef.current = { refresh: this.serverSide };\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { serverSideUrl } = this.props;\r\n    if (serverSideUrl) {\r\n      this.serverSide();\r\n    } else {\r\n      this.processData();\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  // Funcion para evaluar cambios en los datos\r\n  componentDidUpdate(prevProps) {\r\n    const { data, serverSideUrl } = this.props;\r\n    if (prevProps.data !== data && !serverSideUrl) {\r\n      this.processData();\r\n    }\r\n  }\r\n\r\n  // Funcion para cambiar los filtros\r\n  setFilter = (filters) => {\r\n    if (this.props.serverSideUrl) {\r\n      this.setState({ filters, page: 0, isLoading: true }, this.serverSide);\r\n    } else {\r\n      const data = this.filterData(filters);\r\n      this.setState({ data, page: 0 });\r\n    }\r\n  };\r\n\r\n  // Funcion para cambiar de pagina\r\n  setPage = (page) => {\r\n    if (this.props.serverSideUrl) {\r\n      this.setState({ page, isLoading: true }, this.serverSide);\r\n    } else {\r\n      this.setState({ page });\r\n    }\r\n  };\r\n\r\n  // Funcion para cambiar los registros por pagina\r\n  setRowsPerPage = (rowsPerPage) => {\r\n    if (this.props.serverSideUrl) {\r\n      this.setState({ rowsPerPage, page: 0, isLoading: true }, this.serverSide);\r\n    } else {\r\n      this.setState({ rowsPerPage, page: 0 });\r\n    }\r\n  };\r\n\r\n  // Funcion para forma de ordenar, ascendente o descendente, segun seleccionada\r\n  setOrderBy = (orderBy) => {\r\n    const isAsc = orderBy === this.state.orderBy && this.state.order === \"asc\";\r\n    const order = isAsc ? \"desc\" : \"asc\";\r\n\r\n    if (this.props.serverSideUrl) {\r\n      this.setState({ order, orderBy, isLoading: true }, this.serverSide);\r\n    } else {\r\n      const data = this.orderData(order, orderBy);\r\n      this.setState({ order, orderBy, data });\r\n    }\r\n  };\r\n\r\n  // Funcion para filtrar los elementos segun parametros de busqueda\r\n  // TODO: Hacer filtro de datos normales\r\n  // https://www.w3schools.com/jsref/jsref_includes.asp\r\n  filterData = (filters) => {\r\n    const { data } = this.props;\r\n    const filterData = Object.entries(filters);\r\n    let newData = data;\r\n    filterData.forEach((filter) => {\r\n      newData = newData.filter((row) =>\r\n        String(row[filter[0]]).includes(String(filter[1]))\r\n      );\r\n    });\r\n\r\n    return newData;\r\n  };\r\n\r\n  // Funcion que me devuelve registros organizados segun parametros recibidos\r\n  orderData = (order, orderBy) => {\r\n    const { data } = this.props;\r\n    const ascending = order === \"asc\" ? 1 : -1;\r\n    const orderedData = data.sort((a, b) => {\r\n      if (a[orderBy] < b[orderBy]) {\r\n        return -1 * ascending;\r\n      }\r\n      if (a[orderBy] > b[orderBy]) {\r\n        return 1 * ascending;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    return orderedData;\r\n  };\r\n\r\n  // Función que filtra solo datos segun pagina y registros por pagina\r\n  pageData = (data) => {\r\n    if (this.props.serverSideUrl) {\r\n      return data;\r\n    }\r\n\r\n    const { page, rowsPerPage } = this.state;\r\n    const initialRow = page * rowsPerPage;\r\n    return data.slice(initialRow, initialRow + rowsPerPage);\r\n  };\r\n\r\n  // Funcion encargada de cargar los datos solicitados segun parametros\r\n  serverSide = async () => {\r\n    const { serverSideUrl, serverSideData, doGet, onDataLoaded } = this.props;\r\n    const { page, rowsPerPage, order, orderBy, filters } = this.state;\r\n    const sorts = {};\r\n    if (orderBy && orderBy !== \"\") {\r\n      sorts[orderBy] = order;\r\n    }\r\n\r\n    const params = {\r\n      url: serverSideUrl,\r\n      data: {\r\n        perPage: rowsPerPage,\r\n        page: page + 1,\r\n        sorts: JSON.stringify(sorts),\r\n        filters: JSON.stringify(filters),\r\n        ...serverSideData,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const resp = await doGet(params);\r\n      const { data, total } = resp.response;\r\n      this.setState({\r\n        data,\r\n        total: total || 0,\r\n        isLoading: false,\r\n      });\r\n      if (isFunction(onDataLoaded)) {\r\n        onDataLoaded(resp);\r\n      }\r\n    } catch (error) {\r\n      this.props.appError(\r\n        \"Ocurrio un error cargando los datos de la tabla\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  verifyExist = (row) => {\r\n    const { selected } = this.state;\r\n    let index = -1;\r\n    selected.forEach((element, i) => {\r\n      if (Object.is(element, row)) {\r\n        index = i;\r\n      }\r\n    });\r\n    return index;\r\n  };\r\n\r\n  handleSelectAllClick = (event) => {\r\n    let newSelecteds = [];\r\n    const { data } = this.state;\r\n    const { onRowsSelect } = this.props;\r\n    if (event.target.checked) {\r\n      newSelecteds = data.map((row) => row);\r\n    }\r\n    this.setState({ selected: newSelecteds }, () =>\r\n      onRowsSelect(this.state.selected)\r\n    );\r\n  };\r\n\r\n  setCheck = (row) => {\r\n    const { onRowsSelect, singleSelect } = this.props;\r\n    const index = this.verifyExist(row);\r\n    if (index >= 0) {\r\n      this.setState(\r\n        (prevState) => {\r\n          const datos = prevState.selected;\r\n          datos.splice(index, 1);\r\n          return { selected: datos };\r\n        },\r\n        () => onRowsSelect(this.state.selected)\r\n      );\r\n    } else {\r\n      this.setState(\r\n        (prevState) => {\r\n          const selected = singleSelect ? [row] : [...prevState.selected, row];\r\n          return { selected };\r\n        },\r\n        () => onRowsSelect(this.state.selected)\r\n      );\r\n    }\r\n  };\r\n\r\n  // Funcion que llama las correspondientes funciones segun el caso\r\n  processData = () => {\r\n    const { order, orderBy } = this.state;\r\n    const orderData = this.orderData(order, orderBy);\r\n    this.setState({ data: orderData, total: orderData.length });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      columns,\r\n      title,\r\n      onCreate,\r\n      createPermissions,\r\n      onRowsSelect,\r\n      ExtraToolBar,\r\n      paperProps,\r\n      disableCreateButton,\r\n      disableToolbar,\r\n      expandable,\r\n    } = this.props;\r\n    const {\r\n      page,\r\n      rowsPerPage,\r\n      order,\r\n      orderBy,\r\n      data,\r\n      total,\r\n      filters,\r\n      isLoading,\r\n      selected,\r\n    } = this.state;\r\n    return (\r\n      <Paper {...paperProps}>\r\n        {!disableToolbar ? (\r\n          <ToolBar\r\n            title={title}\r\n            columns={columns}\r\n            filters={filters}\r\n            setFilter={this.setFilter}\r\n            onCreate={onCreate}\r\n            createPermissions={createPermissions}\r\n            ExtraToolBar={ExtraToolBar}\r\n            disableCreateButton={disableCreateButton || false}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <TableContainer>\r\n          <TableM size={DEFAULT_MUI_DATATABLE_SIZE}>\r\n            <Head\r\n              columns={columns}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              setOrderBy={this.setOrderBy}\r\n              extraColumn={Boolean(onRowsSelect)}\r\n              expandable={Boolean(expandable)}\r\n              handleSelectAllClick={this.handleSelectAllClick}\r\n              selected={selected}\r\n              totalRow={total}\r\n            />\r\n            {Boolean(expandable) && (\r\n              <BodyExpandable\r\n                columns={columns}\r\n                data={this.pageData(data)}\r\n                isLoading={isLoading}\r\n                expandable={expandable}\r\n              />\r\n            )}\r\n            {Boolean(onRowsSelect) && (\r\n              <BodySelect\r\n                columns={columns}\r\n                data={this.pageData(data)}\r\n                isLoading={isLoading}\r\n                onRowsSelect={onRowsSelect}\r\n                setCheck={this.setCheck}\r\n                verifyExist={this.verifyExist}\r\n              />\r\n            )}\r\n            {!onRowsSelect && !expandable && (\r\n              <Body\r\n                columns={columns}\r\n                data={this.pageData(data)}\r\n                isLoading={isLoading}\r\n              />\r\n            )}\r\n          </TableM>\r\n        </TableContainer>\r\n        <Pagination\r\n          page={page}\r\n          rowsPerPage={rowsPerPage}\r\n          total={total}\r\n          setPage={this.setPage}\r\n          setRowsPerPage={this.setRowsPerPage}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nTable.defaultProps = {\r\n  data: [],\r\n  paperProps: {},\r\n};\r\n\r\nTable.propTypes = {\r\n  // permite especificar las props para el paper que envuelve a esta tabla\r\n  paperProps: PropTypes.shape(),\r\n  // Array de columnas, cada columna puede tener varias llaves\r\n  // label: Es el texto que se quiere mostrar en el Toobar de la tabla\r\n  // name: Texto que identificara datos a poner en cada columna y registros a buscar\r\n  // align: alineacion de las columnas left, rigth, center, por defecto es left\r\n  // component: React component o función, en caso de ser funcion pasa como parametro el registro\r\n  // filter: booleano para filtrar registros, por defecto true\r\n  // width: tamaño de la columna\r\n  // type: tipo de columna, por el momento se acepta 'number'\r\n  columns: PropTypes.oneOfType([PropTypes.array]).isRequired,\r\n  // Array de objetos para mostrar en en la tabla\r\n  data: PropTypes.arrayOf(PropTypes.object),\r\n  // Titulo de la tabla\r\n  title: PropTypes.string,\r\n  // Url a la cual se buscaran los datos\r\n  serverSideUrl: PropTypes.string,\r\n  // Data para la url en caso de necesitar enviar algun parametro extra\r\n  serverSideData: PropTypes.oneOfType([PropTypes.object]),\r\n  // Funcion para crear nuevos registros\r\n  onCreate: PropTypes.func,\r\n  // Funcion para expandir la columna, devuelve como parametro el registro\r\n  expandable: PropTypes.func,\r\n  // Funcion para retornar la data que llega del servidor\r\n  onDataLoaded: PropTypes.func,\r\n  // Funcion que devuelve las columnas seleccionadas\r\n  onRowsSelect: PropTypes.func,\r\n  // Booleano para seleccionar solo un registro\r\n  singleSelect: PropTypes.bool,\r\n  // Elemento para crear nuevos botones que se deseen adicionar en la parte superior de la tabla.\r\n  ExtraToolBar: PropTypes.node,\r\n  // Permisos para el boton de crear\r\n  createPermissions: PropTypes.string,\r\n  doGet: PropTypes.func,\r\n  appError: PropTypes.func.isRequired,\r\n  forwardedRef: PropTypes.oneOfType([PropTypes.object]),\r\n  // Prop para habilitar o deshabilitar el boton de create.\r\n  disableCreateButton: PropTypes.bool,\r\n  // Props para habilitar o deshabilitar el toolbar\r\n  disableToolbar: PropTypes.bool,\r\n  // Para table de selección si deseo deshabilitar el Checkbox para una row en especifico,\r\n  // en el data se debe enviar el campo \"selectable\" con valor booleano para\r\n  // habilitar o deshabilitar.\r\n};\r\n\r\nexport default withApi(withNotification(Table));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  UpdateButton,\r\n  DeleteButton,\r\n  ChangeStatusButton,\r\n  PrintButton,\r\n} from \"components/controls\";\r\n\r\nconst DefaultActions = ({\r\n  row,\r\n  onEdit,\r\n  onDelete,\r\n  onChangeStatus,\r\n  onPrint,\r\n  children,\r\n  updatePermissions = \"\",\r\n  deletePermissions = \"\",\r\n  changeStatusPermissions = \"\",\r\n  printPermissions = \"\",\r\n  disabledUpdate,\r\n  disabledDelete,\r\n  disabledPrint,\r\n}) => (\r\n  <>\r\n    {onEdit && (\r\n      <UpdateButton\r\n        onClick={() => onEdit(row)}\r\n        requiredPermissions={updatePermissions}\r\n        disabled={disabledUpdate}\r\n      />\r\n    )}\r\n    {onDelete && (\r\n      <DeleteButton\r\n        onClick={() => onDelete(row)}\r\n        requiredPermissions={deletePermissions}\r\n        disabled={disabledDelete}\r\n      />\r\n    )}\r\n    {onChangeStatus && (\r\n      <ChangeStatusButton\r\n        onClick={() => onChangeStatus(row)}\r\n        requiredPermissions={changeStatusPermissions}\r\n        disabled={disabledDelete}\r\n      />\r\n    )}\r\n    {onPrint && (\r\n      <PrintButton\r\n        onClick={() => onPrint(row)}\r\n        requiredPermissions={printPermissions}\r\n        disabled={disabledPrint}\r\n      />\r\n    )}\r\n    {children}\r\n  </>\r\n);\r\n\r\nDefaultActions.propTypes = {\r\n  // Data del registro a retornar\r\n  row: PropTypes.oneOfType([PropTypes.object]),\r\n  // Funcion para el UpdateButton\r\n  onEdit: PropTypes.func,\r\n  // Funcion para el DeleteButton\r\n  onDelete: PropTypes.func,\r\n  // Funcion para el ChangeStatusButton\r\n  onChangeStatus: PropTypes.func,\r\n  // Funcion para el PrintButton\r\n  onPrint: PropTypes.func,\r\n  // Componentes adicionales\r\n  children: PropTypes.node,\r\n  // Permisos para editar\r\n  updatePermissions: PropTypes.string,\r\n  // Permisos para eliminar\r\n  deletePermissions: PropTypes.string,\r\n  // Permisos para cambiar estado\r\n  changeStatusPermissions: PropTypes.string,\r\n  // Permisos para Imprimir\r\n  printPermissions: PropTypes.string,\r\n\r\n  disabledUpdate: PropTypes.bool,\r\n  disabledDelete: PropTypes.bool,\r\n  disabledPrint: PropTypes.bool,\r\n};\r\n\r\nexport default DefaultActions;\r\n","import React from 'react';\r\nimport { Chip as MuiChip } from '@mui/material';\r\nimport styled from 'styled-components';\r\nimport { red, green, grey, blue } from '@mui/material/colors';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ChipColors = {\r\n  BLUE: 'BLUE',\r\n  RED: 'RED',\r\n  GREEN: 'GREEN',\r\n  GREY: 'GREY'\r\n};\r\n\r\nconst ChipComponent = styled(MuiChip)`\r\n  height: 20px;\r\n  padding: 4px 0;\r\n  font-size: 90%;\r\n  background-color: ${(props) => props.rgbcolor};\r\n`;\r\n\r\nfunction Chip({ color, label, ...rest }) {\r\n  const { GREY, GREEN, RED, BLUE } = ChipColors;\r\n  let rgb = color;\r\n  switch (color) {\r\n    case GREY:\r\n      rgb = grey['500'];\r\n      break;\r\n    case GREEN:\r\n      rgb = green['500'];\r\n      break;\r\n    case RED:\r\n      rgb = red['500'];\r\n      break;\r\n    case BLUE:\r\n      rgb = blue['500'];\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return <ChipComponent label={label} rgbcolor={rgb} {...rest} />;\r\n}\r\n\r\nChip.propTypes = {\r\n  // Colores posibles a usar son, green, red, grey, blue\r\n  // En caso de necesitar otro, pasar el color en formato RGB Hexadecimal\r\n  color: PropTypes.string.isRequired,\r\n  // Texto a mostrar dentro del chip\r\n  label: PropTypes.string\r\n};\r\n\r\nexport default Chip;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from '@mui/material';\r\n\r\n/**\r\n * @name BreadLink\r\n * @desc Componente que procesa los links a mostrar de los Breadcums\r\n * @param {*} param0\r\n */\r\nconst BreadLink = ({ label }) => <Typography>{label}</Typography>;\r\n\r\nBreadLink.propTypes = {\r\n  label: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BreadLink;\r\n","import { Breadcrumbs, Divider } from '@mui/material';\r\nimport { spacing } from '@mui/system';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledBreadcrumbs = styled(Breadcrumbs)(spacing);\r\nconst StyledDivider = styled(Divider)(spacing);\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  padding: 15px 0;\r\n`;\r\n\r\nexport { StyledBreadcrumbs, StyledDivider, Wrapper };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Breadcrumbs } from '@mui/material';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport BreadLink from './BreadLink';\r\nimport { StyledBreadcrumbs, StyledDivider, Wrapper } from './styles';\r\n\r\n/**\r\n * @name Breadcrumb\r\n * @desc Componente que procesa las rutas de navegación para mostrar el header\r\n * @param {*} param0\r\n */\r\nconst Breadcrumb = ({ breadcrumbs = [] }) => (\r\n  <Wrapper>\r\n    {breadcrumbs.length > 0 && (\r\n      <StyledBreadcrumbs>\r\n        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n          {breadcrumbs.map((item) => (\r\n            <BreadLink key={`breadcrumb-${item.label}`} label={item.label} path={item.path} />\r\n          ))}\r\n        </Breadcrumbs>\r\n      </StyledBreadcrumbs>\r\n    )}\r\n    <StyledDivider />\r\n  </Wrapper>\r\n);\r\n\r\nBreadcrumb.propTypes = {\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string,\r\n      path: PropTypes.string\r\n    })\r\n  ).isRequired\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import PropTypes from \"prop-types\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { forwardRef, useEffect, useCallback } from \"react\";\r\n// material\r\nimport { Box, Typography, Card } from \"@mui/material\";\r\n// utils\r\nimport Header from \"components/breadcrumbs\";\r\nimport track from \"utils/analytics\";\r\n\r\nconst PageGeneral = forwardRef(\r\n  ({ children, title = \"\", withOutCard, breadcrumbs, sx, ...other }, ref) => {\r\n    const { pathname } = useLocation();\r\n\r\n    const sendPageViewEvent = useCallback(() => {\r\n      track.pageview({\r\n        page_path: pathname,\r\n      });\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      sendPageViewEvent();\r\n    }, [sendPageViewEvent]);\r\n\r\n    return (\r\n      <Box ref={ref} {...other}>\r\n        <Helmet>\r\n          <title>{title}</title>\r\n        </Helmet>\r\n        <Box\r\n          sx={{\r\n            p: 2,\r\n            ...sx,\r\n          }}\r\n        >\r\n          <Header breadcrumbs={breadcrumbs} />\r\n          <Typography variant=\"h6\" color=\"textPrimary\">\r\n            {title}\r\n          </Typography>\r\n        </Box>\r\n        {withOutCard ? (\r\n          <>{children}</>\r\n        ) : (\r\n          <Card sx={{ overflow: \"unset\", position: \"unset\", width: \"100%\" }}>\r\n            <Box\r\n              sx={{\r\n                p: 1,\r\n                minHeight: 200,\r\n                ...sx,\r\n              }}\r\n            >\r\n              {children}\r\n            </Box>\r\n          </Card>\r\n        )}\r\n      </Box>\r\n    );\r\n  }\r\n);\r\n\r\nPageGeneral.defaultProps = {\r\n  withOutCard: false,\r\n};\r\n\r\nPageGeneral.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string,\r\n  withOutCard: PropTypes.bool,\r\n  sx: PropTypes.object,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string,\r\n      path: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default PageGeneral;\r\n","import { red, green, yellow, blue, deepPurple, lightGreen, teal, orange, grey } from '@mui/material/colors';\r\n\r\n/**\r\n * Estilos basados en:\r\n *\r\n * https://material-ui.com/customization/color/\r\n */\r\n\r\nexport default {\r\n  activo: {\r\n    background: green[500],\r\n    color: 'white'\r\n  },\r\n  inactivo: {\r\n    background: red[500],\r\n    color: 'white'\r\n  },\r\n  cerrado: {\r\n    background: grey[500]\r\n  },\r\n  aprobado: {\r\n    background: green[600],\r\n    color: 'white'\r\n  },\r\n  anulado: {\r\n    background: red[500],\r\n    color: 'white'\r\n  },\r\n  rechazado: {\r\n    background: red[500],\r\n    color: 'white'\r\n  },\r\n  autorizado: {\r\n    background: blue[700],\r\n    color: 'white'\r\n  },\r\n  programado: {\r\n    background: deepPurple[500],\r\n    color: 'white'\r\n  },\r\n  picking: {\r\n    background: lightGreen[500]\r\n  },\r\n  ejecutado: {\r\n    background: lightGreen[500]\r\n  },\r\n  despacho: {\r\n    background: teal[500],\r\n    color: 'white'\r\n  },\r\n  bloqueado: {\r\n    background: orange[500]\r\n  },\r\n  ocupado: {\r\n    background: yellow[500]\r\n  },\r\n  disponible: {\r\n    background: green[500],\r\n    color: 'white'\r\n  },\r\n  abierto: {\r\n    background: green[500]\r\n  },\r\n  alistamiento: {\r\n    background: blue[500],\r\n    color: 'white'\r\n  },\r\n  pendiente: {\r\n    background: blue[700],\r\n    color: 'white'\r\n  },\r\n  completado: {\r\n    background: green[500],\r\n    color: 'white'\r\n  },\r\n  'en-proceso': {\r\n    background: yellow[500]\r\n  },\r\n  'sin-alistar': {\r\n    background: yellow[500]\r\n  },\r\n  almacenado: {\r\n    background: green[500],\r\n    color: 'white'\r\n  },\r\n  normal: {\r\n    background: green[500],\r\n    color: 'white'\r\n  },\r\n  medio: {\r\n    background: yellow[500]\r\n  },\r\n  alto: {\r\n    background: red[500]\r\n  },\r\n  no_aplica: {\r\n    background: grey[500]\r\n  },\r\n  asignado: {\r\n    background: green[600],\r\n    color: 'white'\r\n  },\r\n  'sin-revisar': {\r\n    background: yellow[500]\r\n  },\r\n  'sin-estado': {\r\n    background: grey[50],\r\n    color: grey[900]\r\n  },\r\n  'aprobado-cliente': {\r\n    background: green[400],\r\n    color: 'white'\r\n  },\r\n  pedido: {\r\n    background: blue[500],\r\n    color: 'white'\r\n  },\r\n  'orden-reabastecimiento': {\r\n    background: blue[500],\r\n    color: 'white'\r\n  },\r\n  'solicitud-produccion': {\r\n    background: blue[500],\r\n    color: 'white'\r\n  },\r\n  'producto-terminado': {\r\n    background: blue[500],\r\n    color: 'white'\r\n  },\r\n  material: {\r\n    background: blue[500]\r\n  },\r\n  'aprobado-procesando': {\r\n    background: green[600],\r\n    color: 'white'\r\n  },\r\n  'aprobado-terminado': {\r\n    background: green[600],\r\n    color: 'white'\r\n  },\r\n  conciliado: {\r\n    background: green[500],\r\n    color: 'white'\r\n  },\r\n  general: {\r\n    background: blue[500],\r\n    color: 'white'\r\n  },\r\n  fallido: {\r\n    background: red[500],\r\n    color: 'white'\r\n  },\r\n  exitoso: {\r\n    background: green[500],\r\n    color: 'white'\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Chip } from \"@mui/material\";\r\nimport { withStyles } from \"@mui/styles\";\r\nimport styles from \"./styles\";\r\n\r\nfunction EstadoChip({ estado, classes, onClick }) {\r\n  const className = estado\r\n    ? estado.replace(/_/g, \"-\").toLowerCase()\r\n    : \"sin-estado\";\r\n  const label = estado ? estado.replace(/_/g, \" \") : \"SIN ESTADO\";\r\n\r\n  const handleClick = () => {\r\n    if (onClick) {\r\n      onClick(); // Llama al método onClick si está definido\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Chip\r\n      size=\"small\"\r\n      label={label}\r\n      className={classes[className]}\r\n      onClick={handleClick}\r\n    />\r\n  );\r\n}\r\n\r\nEstadoChip.propTypes = {\r\n  estado: PropTypes.string.isRequired,\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(EstadoChip);\r\n","// import ChipInput from 'mui-material-chip-input';\r\nimport ChipInput from '@mui/material/Chip';\r\n\r\nimport React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { isFunction } from 'utils/functions';\r\n\r\nconst InputTag = ({ field, form, placeholder, label, className, style, variant, disabled, onValueChanged }) => {\r\n  const { value, name } = field;\r\n\r\n  const { setFieldValue, errors, touched, setFieldTouched } = form;\r\n\r\n  const onAdd = async (x) => {\r\n    value.push(x);\r\n    setFieldTouched(name, true);\r\n    setFieldValue(name, value);\r\n    if (isFunction(onValueChanged)) {\r\n      await onValueChanged(form);\r\n    }\r\n  };\r\n\r\n  const onDelete = async (x) => {\r\n    const index = value.indexOf(x);\r\n    setFieldTouched(name, true);\r\n    setFieldValue(name, value);\r\n    if (index > -1) {\r\n      value.splice(index, 1);\r\n      if (isFunction(onValueChanged)) {\r\n        await onValueChanged(form);\r\n      }\r\n    }\r\n  };\r\n\r\n  const hasError = touched[name] && Boolean(errors[name]);\r\n\r\n  return (\r\n    <ChipInput\r\n      disabled={disabled}\r\n      style={style}\r\n      error={hasError}\r\n      helperText={errors[name]}\r\n      className={className}\r\n      value={value || []}\r\n      variant={variant}\r\n      placeholder={placeholder}\r\n      label={label}\r\n      onAdd={onAdd}\r\n      onDelete={onDelete}\r\n      margin=\"dense\"\r\n    />\r\n  );\r\n};\r\n\r\nInputTag.defaultProps = {\r\n  variant: 'outlined',\r\n  disabled: false,\r\n  style: { width: '100%' }\r\n};\r\n\r\nInputTag.propTypes = {\r\n  // Evento que se ejecutara cada vez que cambie el valor del componente 'al agregar y al eliminar'\r\n  onValueChanged: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  style: PropTypes.oneOfType([PropTypes.object]),\r\n  placeholder: PropTypes.string,\r\n  label: PropTypes.string,\r\n  className: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  field: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.array])\r\n  }),\r\n  form: PropTypes.shape({\r\n    errors: PropTypes.shape(),\r\n    touched: PropTypes.shape(),\r\n    setFieldTouched: PropTypes.func.isRequired,\r\n    setFieldValue: PropTypes.func.isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default InputTag;\r\n","import React from 'react';\r\nimport Autocomplete from '@mui/lab/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport PropTypes from 'prop-types';\r\nimport { isFunction } from 'utils/functions';\r\n\r\nconst DropdownMultiple = ({ field, items, form, onOptionSelected, ...otherProps }) => {\r\n  const { value: valueField = [], name } = field;\r\n  const { touched, errors, setFieldValue } = form;\r\n  const onchange = async (opcion, value) => {\r\n    const values = items.filter((item) => value.includes(item)).map((item) => item.value);\r\n    if (onOptionSelected) {\r\n      await onOptionSelected(values);\r\n    }\r\n\r\n    setFieldValue(name, values);\r\n    if (isFunction(otherProps.onChange)) {\r\n      otherProps.onChange(values);\r\n    }\r\n  };\r\n  const selected = items.filter((item) => valueField.includes(item.value));\r\n  const hasError = touched[name] && Boolean(errors[name]);\r\n  delete otherProps.proxyonblur;\r\n  delete otherProps.proxyonchange;\r\n\r\n  return (\r\n    <Autocomplete\r\n      multiple\r\n      size=\"small\"\r\n      options={items}\r\n      getOptionLabel={(option) => option.label}\r\n      onChange={onchange}\r\n      value={selected}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          error={hasError}\r\n          helperText={hasError && errors[name]}\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          {...otherProps}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nDropdownMultiple.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  items: PropTypes.oneOfType([PropTypes.any]),\r\n  field: PropTypes.oneOfType([PropTypes.any]),\r\n  form: PropTypes.oneOfType([PropTypes.any]),\r\n  proxyonchange: PropTypes.func,\r\n  // Funcion que se ejecutara al momento de seleccionar un Item.\r\n  onOptionSelected: PropTypes.func\r\n};\r\n\r\nexport default DropdownMultiple;\r\n","const PERSONA_NATURAL = \"PN\";\r\nconst PERSONA_JURIDICA = \"PJ\";\r\nconst HORA = \"H\";\r\nconst DIA = \"D\";\r\nconst PRODUCTO_TERMINADO = \"PT\";\r\nconst RECEPCION = \"R\";\r\nconst FIELD_TYPE_TEXT = \"T\";\r\nconst FIELD_TYPE_SELECT = \"S\";\r\nconst FIELD_TYPE_NUMBER = \"N\";\r\nconst FIELD_TYPE_LOGIC = \"L\";\r\nconst FIELD_TYPE_DATE = \"F\";\r\nconst FIELD_TYPE_MULTIPLE = \"M\";\r\nconst FIELD_TYPE_INPUTTAG = \"IT\";\r\n\r\nconst abreviaturas = {\r\n  PERSONA_JURIDICA,\r\n  PERSONA_NATURAL,\r\n  HORA,\r\n  DIA,\r\n  PRODUCTO_TERMINADO,\r\n  RECEPCION,\r\n  FIELD_TYPE_TEXT,\r\n  FIELD_TYPE_SELECT,\r\n  FIELD_TYPE_NUMBER,\r\n  FIELD_TYPE_LOGIC,\r\n  FIELD_TYPE_DATE,\r\n  FIELD_TYPE_MULTIPLE,\r\n  FIELD_TYPE_INPUTTAG,\r\n};\r\n\r\nexport default abreviaturas;\r\n","import { TextBase, SelectBase, SwitchBase } from 'components';\r\nimport InputTag from 'components/inputTag/inputTag';\r\nimport DropdownMultiple from 'components/DropdownMultiple/DropdownMultiple';\r\nimport { Abreviaturas } from 'constantes';\r\nimport DatePickerBase from 'components/pickers/DatePickerBase';\r\n\r\n/**\r\n * Archivo que resuelve el tipo de input dependiendo de la llave que se especifique por\r\n * medio de abreviaturas.\r\n * @author Julian Andres Osorio\r\n */\r\nconst fieldTypes = {};\r\nfieldTypes[Abreviaturas.FIELD_TYPE_DATE] = DatePickerBase;\r\nfieldTypes[Abreviaturas.FIELD_TYPE_TEXT] = TextBase;\r\nfieldTypes[Abreviaturas.FIELD_TYPE_SELECT] = SelectBase;\r\nfieldTypes[Abreviaturas.FIELD_TYPE_NUMBER] = TextBase;\r\nfieldTypes[Abreviaturas.FIELD_TYPE_LOGIC] = SwitchBase;\r\nfieldTypes[Abreviaturas.FIELD_TYPE_INPUTTAG] = InputTag;\r\nfieldTypes[Abreviaturas.FIELD_TYPE_MULTIPLE] = DropdownMultiple;\r\n\r\nexport default fieldTypes;\r\n","import { useCallback, useState, useEffect } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport { withApi, withNotification } from 'wrappers';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport StepContent from '@mui/material/StepContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { ConfirmModal } from 'components/dialogs';\r\nimport messages from 'constantes/messages';\r\n\r\nfunction VerticalLinearStepper({ url, urlData, doGet, doPut, appInfo, genericException, refresh }) {\r\n  const [steps, setSteps] = useState([]);\r\n  const [action, setAction] = useState(null);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n\r\n  // Call to API for load form values\r\n  const loadFields = useCallback(async () => {\r\n    const params = {\r\n      url: `${url}/initestado`,\r\n      data: { ...urlData }\r\n    };\r\n    const resp = await doGet(params);\r\n    return resp;\r\n  }, [doGet, url, urlData]);\r\n\r\n  const init = useCallback(async () => {\r\n    try {\r\n      const { states, currentState } = await loadFields();\r\n      const current = states.find((item) => item.state === currentState);\r\n      console.log(current);\r\n      if (current) {\r\n        setActiveStep(current.id - 1);\r\n      }\r\n      console.log(states);\r\n      setSteps(states);\r\n    } catch (error) {\r\n      genericException(error);\r\n    }\r\n  }, [genericException, loadFields]);\r\n\r\n  useEffect(() => {\r\n    init();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const closeModal = () => setAction(null);\r\n\r\n  const openModal = (stateAction) => {\r\n    setAction(stateAction);\r\n  };\r\n\r\n  // Call to API for remove record according with your id\r\n  const onAccept = async () => {\r\n    const params = {\r\n      url: `${url}/updateestado`,\r\n      data: { state: action, ...urlData }\r\n    };\r\n\r\n    try {\r\n      await doPut(params);\r\n      init();\r\n      refresh();\r\n      closeModal();\r\n      appInfo(messages.crud.update);\r\n    } catch (error) {\r\n      genericException(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {Boolean(action) && (\r\n        <ConfirmModal\r\n          open\r\n          title=\"Actualizar el estado\"\r\n          message=\"¿Está seguro de actualizar el estado de este registro?\"\r\n          onClose={closeModal}\r\n          onAccept={onAccept}\r\n        />\r\n      )}\r\n      <Typography>Estado</Typography>\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((step) => {\r\n          const { state, transition } = step;\r\n          console.log(transition);\r\n          return (\r\n            <Step key={state}>\r\n              <StepLabel>{state}</StepLabel>\r\n              <StepContent>\r\n                <Box sx={{ p: 1 }}>\r\n                  <div>\r\n                    {transition &&\r\n                      transition.map((transition) => {\r\n                        const { state, color, label } = transition;\r\n                        return (\r\n                          <Button\r\n                            key={`index-${state}`}\r\n                            variant=\"contained\"\r\n                            onClick={() => openModal(state)}\r\n                            color={color ?? 'primary'}\r\n                            sx={{ minWidth: '100px', mt: 1, mr: 1 }}\r\n                          >\r\n                            {label}\r\n                          </Button>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                </Box>\r\n              </StepContent>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n    </>\r\n  );\r\n}\r\n\r\nVerticalLinearStepper.propTypes = {\r\n  doGet: PropTypes.func.isRequired,\r\n  doPut: PropTypes.func.isRequired,\r\n  appInfo: PropTypes.func.isRequired,\r\n  url: PropTypes.string,\r\n  urlData: PropTypes.oneOfType([PropTypes.object]),\r\n  genericException: PropTypes.func.isRequired,\r\n  refresh: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withApi(withNotification(VerticalLinearStepper));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ApiServiceFecth from \"service/ApiServiceFecth\";\r\nimport { blobToBase64, fireDownloadFromResponse } from \"./config/helpers\";\r\n//import { Button } from \"@material-ui/core\";\r\nimport { withNotification } from \"wrappers\";\r\nimport endPoints from \"endPoints/endPoints\";\r\nimport { ButtonBase } from \"@mui/material\";\r\n\r\nfunction ImagePreview({\r\n  alt,\r\n  url,\r\n  downloadUrl,\r\n  genericException,\r\n  appSuccess,\r\n  appNotify,\r\n  appInfo,\r\n  appWarning,\r\n  appError,\r\n  ...rest\r\n}) {\r\n  const [src, setSrc] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const response = await ApiServiceFecth.get({ url });\r\n      let data = \"//\";\r\n      if (response.ok) {\r\n        const blob = await response.blob();\r\n        data = await blobToBase64(blob);\r\n      }\r\n      setSrc(data);\r\n    };\r\n    getData();\r\n  }, [url]);\r\n\r\n  const handleDownload = async () => {\r\n    try {\r\n      const file = await ApiServiceFecth.download(\r\n        endPoints.general.images.download,\r\n        { imageUrl: downloadUrl }\r\n      );\r\n      const contentType = file.headers.get(\"content-type\");\r\n      const type = contentType.split(\"/\")[1];\r\n\r\n      fireDownloadFromResponse(file, `imagen_${Date.now()}.${type}`);\r\n    } catch (error) {\r\n      genericException(error);\r\n    }\r\n  };\r\n\r\n  if (downloadUrl) {\r\n    return (\r\n      src && (\r\n        <ButtonBase onClick={handleDownload}>\r\n          <img src={src} alt={alt} {...rest} />\r\n        </ButtonBase>\r\n      )\r\n    );\r\n  }\r\n\r\n  return src && <img src={src} alt={alt} {...rest} />;\r\n}\r\n\r\nImagePreview.defaultProps = {\r\n  alt: \"Imagen\",\r\n  downloadUrl: false,\r\n};\r\n\r\nImagePreview.propTypes = {\r\n  alt: PropTypes.string,\r\n  url: PropTypes.string.isRequired,\r\n  downloadUrl: PropTypes.string,\r\n  genericException: PropTypes.func,\r\n  appSuccess: PropTypes.func,\r\n  appNotify: PropTypes.func,\r\n  appInfo: PropTypes.func,\r\n  appWarning: PropTypes.func,\r\n  appError: PropTypes.func,\r\n};\r\n\r\nexport default withNotification(ImagePreview);\r\n","/**\r\n * Metodo genérico que dispara una descarga de un archivo por medio de javascript\r\n *\r\n * @param httpResponse los datos binarios que representan el archivo\r\n * @param filename el nombre con el cual se disparará la descarga del archivo\r\n * @author Daniel Tobón Mejía\r\n */\r\nexport const fireDownloadFromResponse = async (httpResponse, filename) => {\r\n  const blob = await httpResponse.blob();\r\n  const downloadUrl = window.URL.createObjectURL(new Blob([blob]));\r\n  const a = document.createElement(\"a\");\r\n  a.href = downloadUrl;\r\n  a.download = filename;\r\n  a.click();\r\n  const { parentNode } = a;\r\n  if (parentNode) {\r\n    parentNode.removeChild(a);\r\n  }\r\n};\r\n\r\nexport const blobToBase64 = (blob) =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onerror = reject;\r\n    reader.onload = () => {\r\n      resolve(reader.result);\r\n    };\r\n    reader.readAsDataURL(blob);\r\n  });\r\n\r\n/**\r\n * Metodo genérico que dispara una descarga de un archivo por medio de string\r\n *\r\n * @param cadena string que representan el archivo\r\n * @param filename el nombre con el cual se disparará la descarga del archivo\r\n */\r\nexport const fireDownloadFromString = async (cadena, filename) => {\r\n  const downloadUrl = window.URL.createObjectURL(new Blob([cadena]));\r\n  const a = document.createElement(\"a\");\r\n  a.href = downloadUrl;\r\n  a.download = filename;\r\n  a.click();\r\n  const { parentNode } = a;\r\n  if (parentNode) {\r\n    parentNode.removeChild(a);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport dayjs from 'dayjs';\r\nimport moment from 'moment';\r\n\r\nconst DP_DEFAULT_FORMAT = 'YYYY-MM-DD';\r\nconst PRODUCE_STRING = 'string';\r\n\r\n// Ejemplo de función para manipular el valor de fecha\r\nfunction finalValuesCases(value, produces, format) {\r\n  // Esta es una versión simplificada de la función, debes ajustarla según tus necesidades\r\n  if (produces === PRODUCE_STRING) {\r\n    return value ? dayjs(value).format(format) : '';\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction DatePickerBase({\r\n  produces,\r\n  format,\r\n  label,\r\n  form: { setFieldValue, errors, touched, setFieldTouched },\r\n  field: { name, value },\r\n  ...rest\r\n}) {\r\n  const sanitizedValue = value || null;\r\n  const hasError = touched[name] && Boolean(errors[name]);\r\n\r\n  return (\r\n    <DatePicker\r\n      fullWidth\r\n      autoComplete=\"off\"\r\n      inputVariant=\"outlined\"\r\n      margin=\"dense\"\r\n      name={name}\r\n      clearable\r\n      autoOk\r\n      error={hasError}\r\n      helperText={hasError && errors[name]}\r\n      label={label}\r\n      format={format}\r\n      clearLabel=\"Limpiar\"\r\n      okLabel=\"Aceptar\"\r\n      cancelLabel=\"Cancelar\"\r\n      todayLabel=\"Hoy\"\r\n      value={dayjs(sanitizedValue)}\r\n      // selected={dayjs(sanitizedValue).format('YYYY-MM-DD')}\r\n      animateYearScrolling={false}\r\n      onChange={(valueToSet) => {\r\n        let finalValue = valueToSet;\r\n        if (valueToSet) {\r\n          finalValue = finalValuesCases(finalValue, produces, format);\r\n        }\r\n        setFieldTouched(name, true);\r\n        setFieldValue(name, finalValue);\r\n      }}\r\n      {...rest}\r\n    />\r\n  );\r\n}\r\n\r\nDatePickerBase.defaultProps = {\r\n  produces: PRODUCE_STRING,\r\n  label: '',\r\n  format: DP_DEFAULT_FORMAT\r\n};\r\n\r\nDatePickerBase.propTypes = {\r\n  produces: PropTypes.string,\r\n  label: PropTypes.string,\r\n  field: PropTypes.shape({\r\n    value: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\r\n    onChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired\r\n  }).isRequired,\r\n  format: PropTypes.string,\r\n  form: PropTypes.shape({\r\n    errors: PropTypes.shape(),\r\n    touched: PropTypes.shape(),\r\n    setFieldTouched: PropTypes.func.isRequired,\r\n    setFieldValue: PropTypes.func.isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default DatePickerBase;\r\n","/**\r\n * This constant sets the size for the tables generated by\r\n * masterbase and table general\r\n */\r\nexport const DEFAULT_MUI_DATATABLE_SIZE = 'small';\r\n/**\r\n * This constant sets the size for the action buttons for\r\n * the masterbase and general tables\r\n */\r\nexport const DEFAULT_MUI_DATATABLE_BUTTON_SIZE = 'medium';\r\n/**\r\n * This sets the default available options into the rowsPerPage select for\r\n * masterbase and general tables.\r\n */\r\nexport const DEFAULT_MUI_DATATABLE_ROWS_PER_PAGE_OPTIONS = [10, 30, 100];\r\n/**\r\n * This var is the format lenguajes that receive the number\r\n */\r\nexport const DEFAULT_FORMAT_NUMBER = 'en-US';\r\nexport const formatter = new Intl.NumberFormat(DEFAULT_FORMAT_NUMBER);\r\nexport const mapEstadoLabelValue = (estado) => ({ label: estado.replace(/_/g, ' '), value: estado });\r\n","const masterMessages = {\r\n  masters: {\r\n    employees: {\r\n      title: \"Empleados\",\r\n      deleteTitle: \"Eliminar registro\",\r\n      deleteMessage: \"¿Está seguro de eliminar este registro?\",\r\n      tableTitle: \"Listado de Empleados\",\r\n      createTitle: \"Nuevo\",\r\n      updateTitle: \"Editar\",\r\n      changeStatusTitle: \"Cambiar estado\",\r\n      changeStatusMessage:\r\n        \"¿Está seguro de cambiar el estado de este registro?\",\r\n    },\r\n    patients: {\r\n      title: \"Pacientes\",\r\n      deleteTitle: \"Eliminar registro\",\r\n      deleteMessage: \"¿Está seguro de eliminar este registro?\",\r\n      tableTitle: \"Listado de Pacientes\",\r\n      createTitle: \"Nuevo\",\r\n      updateTitle: \"Editar\",\r\n      changeStatusTitle: \"Cambiar estado\",\r\n      changeStatusMessage:\r\n        \"¿Está seguro de cambiar el estado de este registro?\",\r\n    },\r\n    drugs: {\r\n      title: \"Drogas\",\r\n      deleteTitle: \"Eliminar registro\",\r\n      deleteMessage: \"¿Está seguro de eliminar este registro?\",\r\n      tableTitle: \"Listado de Drogas\",\r\n      createTitle: \"Nuevo\",\r\n      updateTitle: \"Editar\",\r\n      changeStatusTitle: \"Cambiar estado\",\r\n      changeStatusMessage:\r\n        \"¿Está seguro de cambiar el estado de este registro?\",\r\n    },\r\n\r\n    relatives: {\r\n      title: \"Familiares\",\r\n      deleteTitle: \"Eliminar registro\",\r\n      deleteMessage: \"¿Está seguro de eliminar este registro?\",\r\n      tableTitle: \"Listado de Familiares\",\r\n      createTitle: \"Nuevo\",\r\n      updateTitle: \"Editar\",\r\n      changeStatusTitle: \"Cambiar estado\",\r\n      changeStatusMessage:\r\n        \"¿Está seguro de cambiar el estado de este registro?\",\r\n    },\r\n\r\n    \r\n    phases: {\r\n      title: \"Fases\",\r\n      deleteTitle: \"Eliminar registro\",\r\n      deleteMessage: \"¿Está seguro de eliminar este registro?\",\r\n      tableTitle: \"Listado de Fases\",\r\n      createTitle: \"Nuevo\",\r\n      updateTitle: \"Editar\",\r\n      changeStatusTitle: \"Cambiar estado\",\r\n      changeStatusMessage:\r\n        \"¿Está seguro de cambiar el estado de este registro?\",\r\n    },\r\n    \r\n    targets: {\r\n      title: \"Objetivos\",\r\n      deleteTitle: \"Eliminar registro\",\r\n      deleteMessage: \"¿Está seguro de eliminar este registro?\",\r\n      tableTitle: \"Listado de Objetivos\",\r\n      createTitle: \"Nuevo\",\r\n      updateTitle: \"Editar\",\r\n      changeStatusTitle: \"Cambiar estado\",\r\n      changeStatusMessage:\r\n        \"¿Está seguro de cambiar el estado de este registro?\",\r\n    },\r\n    \r\n  },\r\n  transactions: {\r\n\r\n    psychologies: {\r\n      title: \"Psicologías\",\r\n      deleteTitle: \"Eliminar registro\",\r\n      deleteMessage: \"¿Está seguro de eliminar este registro?\",\r\n      tableTitle: \"Listado de Psicologías\",\r\n      createTitle: \"Nuevo\",\r\n      updateTitle: \"Editar\",\r\n      changeStatusTitle: \"Cambiar estado\",\r\n      changeStatusMessage:\r\n        \"¿Está seguro de cambiar el estado de este registro?\",\r\n    },\r\n\r\n    evolutions: {\r\n      title: \"Evoluciones\",\r\n      deleteTitle: \"Eliminar registro\",\r\n      deleteMessage: \"¿Está seguro de eliminar este registro?\",\r\n      tableTitle: \"Listado de Evoluciones\",\r\n      createTitle: \"Nuevo\",\r\n      updateTitle: \"Editar\",\r\n      changeStatusTitle: \"Cambiar estado\",\r\n      changeStatusMessage:\r\n        \"¿Está seguro de cambiar el estado de este registro?\",\r\n    },\r\n\r\n    evaluations: {\r\n      title: \"Evaluaciones\",\r\n      deleteTitle: \"Eliminar registro\",\r\n      deleteMessage: \"¿Está seguro de eliminar este registro?\",\r\n      tableTitle: \"Listado de Evaluaciones\",\r\n      createTitle: \"Nuevo\",\r\n      updateTitle: \"Editar\",\r\n      changeStatusTitle: \"Cambiar estado\",\r\n      changeStatusMessage:\r\n        \"¿Está seguro de cambiar el estado de este registro?\",\r\n    },\r\n\r\n    psychologyRelatives: {\r\n      title: \"Historia Familiar\",\r\n      deleteTitle: \"Eliminar registro\",\r\n      deleteMessage: \"¿Está seguro de eliminar este registro?\",\r\n      tableTitle: \"Listado de Historia Familiar\",\r\n      createTitle: \"Nuevo\",\r\n      updateTitle: \"Editar\",\r\n      changeStatusTitle: \"Cambiar estado\",\r\n      changeStatusMessage:\r\n        \"¿Está seguro de cambiar el estado de este registro?\",\r\n    },\r\n\r\n    psychologyDrugs: {\r\n      title: \"Cuadro de consumo\",\r\n      deleteTitle: \"Eliminar registro\",\r\n      deleteMessage: \"¿Está seguro de eliminar este registro?\",\r\n      tableTitle: \"Listado de Cuadro de consumo\",\r\n      createTitle: \"Nuevo\",\r\n      updateTitle: \"Editar\",\r\n      changeStatusTitle: \"Cambiar estado\",\r\n      changeStatusMessage:\r\n        \"¿Está seguro de cambiar el estado de este registro?\",\r\n    },\r\n\r\n\r\n    \r\n  },\r\n  seguridad: {\r\n    usuarios: {\r\n      title: \"Usuarios\",\r\n      createTitle: \"Crear Usuarios\",\r\n      deleteTitle: \"Eliminar Usuarios\",\r\n      deleteMessage: \"¿Esta seguro de eliminar el Usuarios?\",\r\n      updateTitle: \"Actualizar Usuarios\",\r\n    },\r\n    rol: {\r\n      title: \"Roles\",\r\n      createTitle: \"Crear rol\",\r\n      deleteTitle: \"Eliminar rol\",\r\n      deleteMessage: \"¿Esta seguro de eliminar el rol?\",\r\n      updateTitle: \"Actualizar rol\",\r\n    },\r\n    rolPermission: {\r\n      title: \"Roles permisos\",\r\n      createTitle: \"Crear rol permisos\",\r\n      deleteTitle: \"Eliminar rol permisos\",\r\n      deleteMessage: \"¿Esta seguro de eliminar el rol permisos?\",\r\n      updateTitle: \"Actualizar rol permisos\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default masterMessages;\r\n","const messages = {\r\n  crud: {\r\n    new: \"Registro creado correctamente\",\r\n    update: \"Registro actualizado correctamente\",\r\n    delete: \"Registro eliminado correctamente\",\r\n    changeStatus: \"Estado cambiado correctamente\",\r\n    fail: \"Ha ocurrido un error al momento de intentar grabar los datos\",\r\n  },\r\n  actions: {\r\n    print: \"Impresión realizada correctamente\",\r\n    fail: \"Ha ocurrido un error al momento de realizar la acción\",\r\n  },\r\n  dataFetch: {\r\n    fail: \"Ha ocurrido un error al momento de cargar los datos\",\r\n  },\r\n  labels: {\r\n    actions: \"Acciones\",\r\n    save: \"Guardar\",\r\n    cancel: \"Cancelar\",\r\n  },\r\n  titles: {\r\n    create: \"Crear\",\r\n    update: \"Actualizar\",\r\n  },\r\n  statuses: {\r\n    active: \"Activo\",\r\n    inactive: \"Inactivo\",\r\n  },\r\n  errors: {\r\n    submitting: \"Ocurrió un error al enviar la información\",\r\n    invalidFormat: \"Solicitud inválida\",\r\n    removingRecord: \"Ha ocurrido un error al remover el registro\",\r\n    requestError: \"Ocurrió un error al realizar la solicitud.\",\r\n    fetchingSources: \"Ocurrió un error al obtener información del formulario\",\r\n  },\r\n  dialogs: {\r\n    confirm: {\r\n      title: \"Confirmar acción\",\r\n      message: \"¿Está seguro de realizar esta acción?\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default messages;\r\n","export function getStatusLabel(value) {\r\n  return value === false || value === 0 ? \"Inactivo\" : \"Activo\";\r\n}\r\n\r\nexport function getStatusValue(label) {\r\n  return label == \"Activo\" ? true : false;\r\n}\r\n\r\nexport const getBooleanLabel = (value) => {\r\n  return value === true || value === 1 ? \"Sí\" : \"No\";\r\n};\r\n","import React from \"react\";\r\nimport ApiServiceFecth from \"service/ApiServiceFecth\";\r\nimport { RequestExceptionFactory } from \"exceptions\";\r\nimport PropTypes from \"prop-types\";\r\nimport HttpStatus from \"http-status-codes\";\r\nimport useAuth from \"hooks/useAuth\";\r\n\r\n/**\r\n * @author Juan Fernando Pavas <garzonp2001@gmail.com>\r\n * This HOC allows to use a common interface to call api methods, using\r\n * the fetch service.\r\n */\r\n\r\nexport default (WrappedComponent) =>\r\n  React.memo((props) => {\r\n    const { clearSession } = useAuth();\r\n    /**\r\n     * This function simplifyies the obtaining right method process from the\r\n     * fetch service.\r\n     */\r\n    const resolveFunc = async (type, data) => {\r\n      let response;\r\n      switch (type) {\r\n        case \"post\":\r\n          response = await ApiServiceFecth.post(data);\r\n          break;\r\n        case \"postForm\":\r\n          response = await ApiServiceFecth.postFormData(data);\r\n          break;\r\n        case \"put\":\r\n          response = await ApiServiceFecth.put(data);\r\n          break;\r\n        case \"delete\":\r\n          response = await ApiServiceFecth.delete(data);\r\n          break;\r\n        default:\r\n          response = await ApiServiceFecth.get(data);\r\n          break;\r\n      }\r\n      return response;\r\n    };\r\n\r\n    /**\r\n     * All the request has the same behavour, we can handle this logic\r\n     * inside a function that only returns the result.\r\n     */\r\n    const doRequest = async (type, data) => {\r\n      const initialResponse = await resolveFunc(type, data);\r\n      if (initialResponse.ok) {\r\n        if (initialResponse.status === HttpStatus.NO_CONTENT) {\r\n          return null;\r\n        }\r\n        let resp = \"\";\r\n        if (type == \"getFile\") {\r\n          resp = await initialResponse;\r\n        } else {\r\n          resp = await initialResponse.json();\r\n        }\r\n        return resp;\r\n      }\r\n      if (initialResponse.status === HttpStatus.UNAUTHORIZED) {\r\n        clearSession();\r\n      }\r\n      throw await RequestExceptionFactory.fromHttpResponse(initialResponse);\r\n    };\r\n\r\n    /**\r\n     * Allows to call a get request for json data.\r\n     */\r\n    const doGet = async (data) => doRequest(\"get\", data);\r\n\r\n    /**\r\n     * Allows to call a get request for blob types.\r\n     */\r\n    const doGetFile = async (data) => doRequest(\"getFile\", data);\r\n\r\n    /**\r\n     * Allows to call a post request.\r\n     */\r\n    const doPost = async (data) => doRequest(\"post\", data);\r\n\r\n    /**\r\n     * Allows to call a delete request.\r\n     */\r\n    const doDelete = async (data) => doRequest(\"delete\", data);\r\n\r\n    /**\r\n     * Allows to call a put request.\r\n     */\r\n    const doPut = async (data) => doRequest(\"put\", data);\r\n    const doPostFormData = async (data) => doRequest(\"postForm\", data);\r\n\r\n    /* const doPostFormData = async ({ url, formData }) => {\r\n      for (let pair of formData.entries()) {\r\n        console.log(`${pair[0]}:`, pair[1]);\r\n      }\r\n       const initialResponse = await ApiServiceFecth.postFormData({\r\n        url,\r\n        body: formData,\r\n      });\r\n      if (initialResponse.ok) {\r\n        const json = await initialResponse.json();\r\n        return json;\r\n      }\r\n      if (initialResponse.status === HttpStatus.UNAUTHORIZED) {\r\n        clearSession();\r\n      }\r\n      throw await RequestExceptionFactory.fromHttpResponse(initialResponse); \r\n    }; */\r\n\r\n    return (\r\n      <WrappedComponent\r\n        doGet={doGet}\r\n        doGetFile={doGetFile}\r\n        doPost={doPost}\r\n        doPut={doPut}\r\n        doDelete={doDelete}\r\n        doPostFormData={doPostFormData}\r\n        {...props}\r\n      />\r\n    );\r\n  });\r\n\r\nexport const propTypes = {\r\n  doPost: PropTypes.func,\r\n  doGet: PropTypes.func,\r\n  doGetFile: PropTypes.func,\r\n  doDelete: PropTypes.func,\r\n  doPut: PropTypes.func,\r\n  doPostFormData: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSnackbar } from 'notistack';\r\nimport { ReportableException } from 'exceptions';\r\nimport UnauthenticatedException from 'exceptions/UnauthenticatedException';\r\nimport messages from 'constantes/messages';\r\n\r\nconst withNotification = (WrappedComponent) => (props) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const appInfo = (message) => enqueueSnackbar(message, { variant: 'info' });\r\n  const appSuccess = (message) => enqueueSnackbar(message, { variant: 'success' });\r\n  const appWarning = (message) => enqueueSnackbar(message, { variant: 'warning' });\r\n  const appError = (message, errorInfo) => {\r\n    enqueueSnackbar(message, { variant: 'error' });\r\n    // TODO: Replace this with error logger.\r\n    // eslint-disable-next-line no-console\r\n    console.log(errorInfo);\r\n  };\r\n  const appNotify = (message) => enqueueSnackbar(message);\r\n\r\n  const genericException = (exception) => {\r\n    if (exception instanceof ReportableException) {\r\n      appWarning(exception.message);\r\n    } else if (exception instanceof UnauthenticatedException) {\r\n      appWarning(exception.message);\r\n    } else {\r\n      appError(messages.dataFetch.fail, exception);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WrappedComponent\r\n      appInfo={appInfo}\r\n      appWarning={appWarning}\r\n      appSuccess={appSuccess}\r\n      appError={appError}\r\n      appNotify={appNotify}\r\n      genericException={genericException}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport const propTypes = {\r\n  appInfo: PropTypes.func.isRequired,\r\n  appSuccess: PropTypes.func.isRequired,\r\n  appWarning: PropTypes.func.isRequired,\r\n  appError: PropTypes.func.isRequired,\r\n  appNotify: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withNotification;\r\n"],"names":["TabsComponent","_ref","config","selected","value","setValue","useState","String","_jsxs","TabContext","children","_jsx","Box","sx","borderBottom","borderColor","TabList","onChange","handleChange","event","newValue","map","tab","index","Tab","label","concat","panel","TabPanel","component","defaultProps","ButtonSave","className","style","disabled","rest","Button","variant","type","color","startIcon","SaveIcon","ButtonBase","onClick","Icon","_Fragment","GoBackButton","navigate","useNavigate","ArrowBackIcon","GoEditButton","onEdit","EditIcon","makeStyles","theme","helperText","width","React","ref","items","filter","onOptionSelected","field","name","onBlur","form","touched","errors","setFieldValue","setFieldTouched","props","inputValue","setInputValue","useEffect","find","item","hasError","Boolean","Autocomplete","id","async","e","itemSelected","selectedValue","selectedLabel","getOptionLabel","option","options","fullWidth","renderInput","params","TextField","size","inputRef","autoComplete","error","margin","SwitchBase","FormControlLabel","control","Switch","checked","target","TextAreaBase","rows","multiline","requiredPermissions","checkAccess","useAuth","IconButton","DEFAULT_MUI_DATATABLE_BUTTON_SIZE","palette","primary","main","DeleteIcon","ChangeStatusIcon","UpdateButton","isDisabled","useMemo","Edit","AddCircle","PrintIcon","timeout","AutocompleteBase","doGet","searchValue","url","limit","genericException","requestParams","setOptions","open","setOpen","findValue","setFindValue","loading","setLoading","useCallback","getOptions","resp","fetchParams","data","search","clearTimeout","setTimeout","clearText","closeText","openText","noOptionsText","loadingText","onOpen","onClose","isOptionEqualToValue","_itemSelected$value","onInputChange","newInputValue","reason","popupIcon","KeyboardHideIcon","InputProps","endAdornment","CircularProgress","marginRight","withApi","withNotification","withStyles","typography","formProps","isSubmitting","disableEdit","classes","Grid","container","justifyContent","display","flexDirection","m","Typography","ButtonEdit","ButtonBack","modalProps","Dialog","keepMounted","title","message","onCancel","onAccept","acceptLabel","cancelLabel","setDisabled","BaseModal","DialogTitle","align","DialogContent","DialogActions","disableElevation","Check","onPressCancel","dotNotationExtractor","object","dotNotation","split","reduce","total","currentValue","isFunction","toCheck","styles","visuallyHidden","border","clip","height","overflow","padding","position","top","columns","orderBy","order","setOrderBy","extraColumn","handleSelectAllClick","totalRow","expandable","TableHead","TableRow","TableCell","Checkbox","length","indeterminate","_ref2","row","indice","sortDirection","TableSortLabel","active","direction","col","_cellContent","cellContent","formatter","format","getStatusLabel","isLoading","TableBody","Array","isArray","colSpan","Row","setCheck","hover","selectable","Body","constructor","super","this","state","render","verifyExist","page","rowsPerPage","setPage","setRowsPerPage","TablePagination","rowsPerPageOptions","count","onPageChange","nextPage","onRowsPerPageChange","openExpandable","expanded","KeyboardArrowDown","KeyboardArrowRight","hide","expandible","setExpandible","flex","filters","setFilter","onCreate","createPermissions","ExtraToolBar","disableCreateButton","anchorEl","setAnchorEl","setSearch","show","changeSearch","Toolbar","Tooltip","currentTarget","FilterList","CreateButton","Modal","left","backgroundColor","outline","borderRadius","spacing","_ref3","xs","Table","serverSideUrl","setState","serverSide","filterData","orderData","Object","entries","newData","forEach","includes","ascending","sort","a","b","pageData","initialRow","slice","serverSideData","onDataLoaded","sorts","perPage","JSON","stringify","response","appError","element","i","is","newSelecteds","onRowsSelect","singleSelect","prevState","datos","splice","processData","forwardedRef","current","refresh","componentDidMount","componentDidUpdate","prevProps","paperProps","disableToolbar","Paper","ToolBar","TableContainer","TableM","DEFAULT_MUI_DATATABLE_SIZE","Head","BodyExpandable","BodySelect","Pagination","onDelete","onChangeStatus","onPrint","updatePermissions","deletePermissions","changeStatusPermissions","printPermissions","disabledUpdate","disabledDelete","disabledPrint","DeleteButton","ChangeStatusButton","PrintButton","styled","MuiChip","_templateObject","_taggedTemplateLiteral","rgbcolor","StyledBreadcrumbs","Breadcrumbs","StyledDivider","Divider","Wrapper","div","breadcrumbs","separator","NavigateNextIcon","fontSize","BreadLink","path","PageGeneral","forwardRef","withOutCard","other","pathname","useLocation","sendPageViewEvent","track","pageview","page_path","Helmet","p","Header","Card","minHeight","activo","background","green","inactivo","red","cerrado","grey","aprobado","anulado","rechazado","autorizado","blue","programado","deepPurple","picking","lightGreen","ejecutado","despacho","teal","bloqueado","orange","ocupado","yellow","disponible","abierto","alistamiento","pendiente","completado","almacenado","normal","medio","alto","no_aplica","asignado","pedido","material","conciliado","general","fallido","exitoso","estado","replace","toLowerCase","Chip","handleClick","InputTag","placeholder","onValueChanged","ChipInput","onAdd","push","x","indexOf","otherProps","valueField","proxyonblur","proxyonchange","multiple","opcion","values","PERSONA_JURIDICA","PERSONA_NATURAL","HORA","DIA","PRODUCTO_TERMINADO","RECEPCION","FIELD_TYPE_TEXT","FIELD_TYPE_SELECT","FIELD_TYPE_NUMBER","FIELD_TYPE_LOGIC","FIELD_TYPE_DATE","FIELD_TYPE_MULTIPLE","FIELD_TYPE_INPUTTAG","fieldTypes","Abreviaturas","DatePickerBase","TextBase","SelectBase","DropdownMultiple","urlData","doPut","appInfo","steps","setSteps","action","setAction","activeStep","setActiveStep","loadFields","init","states","currentState","console","log","closeModal","ConfirmModal","messages","crud","update","Stepper","orientation","step","transition","Step","StepLabel","StepContent","minWidth","mt","mr","ImagePreview","alt","downloadUrl","appSuccess","appNotify","appWarning","src","setSrc","ApiServiceFecth","get","ok","blob","Promise","resolve","reject","reader","FileReader","onerror","onload","result","readAsDataURL","blobToBase64","getData","handleDownload","file","download","endPoints","images","imageUrl","headers","httpResponse","filename","window","URL","createObjectURL","Blob","document","createElement","href","click","parentNode","removeChild","fireDownloadFromResponse","Date","now","PRODUCE_STRING","produces","sanitizedValue","DatePicker","inputVariant","clearable","autoOk","clearLabel","okLabel","todayLabel","dayjs","animateYearScrolling","valueToSet","finalValue","finalValuesCases","Intl","NumberFormat","masters","employees","deleteTitle","deleteMessage","tableTitle","createTitle","updateTitle","changeStatusTitle","changeStatusMessage","patients","drugs","relatives","phases","targets","transactions","psychologies","evolutions","evaluations","psychologyRelatives","psychologyDrugs","seguridad","usuarios","rol","rolPermission","new","delete","changeStatus","fail","actions","print","dataFetch","labels","save","cancel","titles","create","statuses","inactive","submitting","invalidFormat","removingRecord","requestError","fetchingSources","dialogs","confirm","getStatusValue","WrappedComponent","clearSession","doRequest","initialResponse","post","postFormData","put","resolveFunc","status","HttpStatus","json","RequestExceptionFactory","fromHttpResponse","doGetFile","doPost","doDelete","doPostFormData","PropTypes","isRequired","enqueueSnackbar","useSnackbar","errorInfo","exception","ReportableException","UnauthenticatedException"],"sourceRoot":""}